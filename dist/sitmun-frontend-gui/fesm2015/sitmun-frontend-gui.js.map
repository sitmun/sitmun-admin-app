{"version":3,"file":"sitmun-frontend-gui.js","sources":["../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-edit-rendered/btn-edit-rendered.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-checkbox-rendered/btn-checkbox-rendered.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-checkbox-filter/btn-checkbox-filter.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-message/dialog-message.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-grid/data-grid.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/material-module.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-grid/dialog-grid.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-form/dialog-form.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-tree/data-tree.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-translation/dialog-translation.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-graph/datagraph.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/sitmun-frontend-gui.module.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/public_api.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/sitmun-frontend-gui.ts"],"sourcesContent":["import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-btn-edit-rendered',\r\n  templateUrl: './btn-edit-rendered.component.html',\r\n  styleUrls: ['./btn-edit-rendered.component.scss']\r\n})\r\nexport class BtnEditRenderedComponent implements ICellRendererAngularComp, OnDestroy {\r\n\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  btnClickedHandler($event) {\r\n    this.params.clicked(this.params.value);\r\n  }\r\n\r\n  getParams(){\r\n    return this.params;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // no need to remove the button click handler \r\n  }\r\n\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-btn-checkbox-rendered',\r\n  templateUrl: './btn-checkbox-rendered.component.html',\r\n  styleUrls: ['./btn-checkbox-rendered.component.scss']\r\n})\r\nexport class BtnCheckboxRenderedComponent implements ICellRendererAngularComp, OnDestroy {\r\n\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params: any): boolean {\r\n    this.params = params;\r\n    \r\n    return true;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n    this.params.context.componentParent.methodFromParent(\r\n      `Row: ${this.params.node.rowIndex}, Col: ${this.params.colDef.headerName}`\r\n    );\r\n  }\r\n\r\n  btnCheckedHandler(event) {\r\n    if(this.params.colDef.editable){\r\n      let checked = !event.target.firstElementChild.checked;\r\n      let colId = this.params.column.colId;\r\n      this.params.value=checked;\r\n      this.params.api.undoRedoService.isFilling=true;\r\n      this.params.node.setDataValue(colId, checked);\r\n    }\r\n    else{\r\n      event.preventDefault();\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  getParams(){\r\n    return this.params;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // no need to remove the button click handler \r\n  }\r\n\r\n}\r\n","import { Component, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {\r\n  IAfterGuiAttachedParams,\r\n  IDoesFilterPassParams,\r\n  IFilterParams,\r\n  RowNode,\r\n  IFloatingFilter,\r\n  NumberFilter,\r\n  NumberFilterModel,\r\n  IFloatingFilterParams,\r\n} from '@ag-grid-community/all-modules';\r\nimport { AgFrameworkComponent } from '@ag-grid-community/angular';\r\nimport { IFilterAngularComp } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n  selector: 'app-btn-checkbox-filter',\r\n  templateUrl: './btn-checkbox-filter.component.html',\r\n  styleUrls: ['./btn-checkbox-filter.component.scss'],\r\n  host: {'class': 'hostClass'}\r\n})\r\nexport class BtnCheckboxFilterComponent implements IFloatingFilter, AgFrameworkComponent<IFloatingFilterParams>   {\r\n  private params: IFloatingFilterParams;\r\n  private valueGetter: (rowNode: RowNode) => any;\r\n  public text: string = '';\r\n  public currentValue: number;\r\n  @ViewChild('input', { read: ViewContainerRef }) public input;\r\n\r\n  agInit(params: IFloatingFilterParams): void {\r\n    this.params = params;\r\n    this.valueGetter = params.filterParams.valueGetter;\r\n    this.params.suppressFilterButton=true;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.text != null && this.text !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    return this.text\r\n      .toLowerCase()\r\n      .split(' ')\r\n      .every(\r\n        (filterWord) =>\r\n          this.valueGetter(params.node)\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(filterWord) >= 0\r\n      );\r\n  }\r\n\r\n  getModel(): any {\r\n    return { value: this.text };\r\n  }\r\n\r\n  setModel(model: any): void {\r\n    this.text = model ? model.value : '';\r\n  }\r\n\r\n\r\n onChange(newValue): void {\r\n    this.params.parentFilterInstance(function (instance) {\r\n      (<NumberFilter>instance).onFloatingFilterChanged(\r\n        'contains',\r\n        newValue\r\n      );\r\n    });\r\n  }\r\n\r\n  onParentModelChanged(parentModel: any): void {\r\n    if (!parentModel) {\r\n      this.currentValue = 0;\r\n    } else {\r\n      // note that the filter could be anything here, but our purposes we're assuming a greater than filter only,\r\n      // so just read off the value and use that\r\n      this.currentValue = parentModel.filter;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-dialog-message',\r\n  templateUrl: './dialog-message.component.html',\r\n  styleUrls: ['./dialog-message.component.scss']\r\n})\r\nexport class DialogMessageComponent implements OnInit {\r\n\r\n  title: string;\r\n  message: string;\r\n  hideCancelButton : boolean=false;\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogMessageComponent>){ }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  doAccept(){\r\n    this.dialogRef.close({event:'Accept'});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { Component, OnInit, NgModule, Input, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AllCommunityModules, ColumnApi, Module } from '@ag-grid-community/all-modules';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BtnEditRenderedComponent } from '../btn-edit-rendered/btn-edit-rendered.component';\r\nimport { BtnCheckboxRenderedComponent } from '../btn-checkbox-rendered/btn-checkbox-rendered.component';\r\nimport { BtnCheckboxFilterComponent } from '../btn-checkbox-filter/btn-checkbox-filter.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogMessageComponent } from '../dialog-message/dialog-message.component';\r\nimport { forEach } from 'jszip';\r\ndeclare let $: any;\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-data-grid',\r\n  templateUrl: './data-grid.component.html',\r\n  styleUrls: ['./data-grid.component.scss']\r\n})\r\nexport class DataGridComponent implements OnInit {\r\n\r\n  _eventRefreshSubscription: any;\r\n  _eventGetSelectedRowsSubscription: any;\r\n  _eventGetAllRowsSubscription: any;\r\n  _eventSaveAgGridStateSubscription: any;\r\n  _eventModifyStatusOfSelectedCells: any;\r\n  modules: Module[] = AllCommunityModules;\r\n\r\n\r\n  UndeRedoActions\r\n  searchValue: string;\r\n  gridApi: any;\r\n  gridColumnApi: any;\r\n  statusColumn = false;\r\n  someColumnIsEditable = false;\r\n  changesMap: Map<number, Map<string, number>> = new Map<number, Map<string, number>>();\r\n  // We will save the id of edited cells and the number of editions done.\r\n  params: any; // Last parameters of the grid (in case we do apply changes we will need it) \r\n  rowData: any[];\r\n  changeCounter: number; // Number of editions done above any cell \r\n  previousChangeCounter: number; // Number of ditions done after the last modification(changeCounter)\r\n  redoCounter: number; // Number of redo we can do\r\n  modificationChange = false;\r\n  undoNoChanges = false; // Boolean that indicates if an undo hasn't modifications\r\n  gridOptions;\r\n  someStatusHasChangedToDelete = false;\r\n\r\n\r\n  @Input() eventRefreshSubscription: Observable<boolean>;\r\n  @Input() eventGetSelectedRowsSubscription: Observable<boolean>;\r\n  @Input() eventGetAllRowsSubscription: Observable<string>;\r\n  @Input() eventSaveAgGridStateSubscription: Observable<boolean>;\r\n  @Input() eventModifyStatusOfSelectedCells: Observable<string>;\r\n  @Input() eventAddItemsSubscription: Observable<boolean>;\r\n  @Input() frameworkComponents: any;\r\n  @Input() components: any;\r\n  @Input() columnDefs: any[];\r\n  @Input() getAll: () => Observable<any>;\r\n  @Input() discardChangesButton: boolean;\r\n  @Input() discardNonReverseStatus: boolean;\r\n  @Input() id: any;\r\n  @Input() undoButton: boolean;\r\n  @Input() defaultColumnSorting: string;\r\n  @Input() redoButton: boolean;\r\n  @Input() applyChangesButton: boolean;\r\n  @Input() deleteButton: boolean;\r\n  @Input() newButton: boolean;\r\n  @Input() actionButton: boolean;\r\n  @Input() addButton: boolean;\r\n  @Input() registerButton: boolean;\r\n  @Input() newStatusRegister: string;\r\n  @Input() globalSearch: boolean;\r\n  @Input() changeHeightButton: boolean;\r\n  @Input() defaultHeight: any;\r\n  @Input() themeGrid: any;\r\n  @Input() singleSelection: boolean;\r\n  @Input() nonEditable: boolean;\r\n  @Input() title: string;\r\n  @Input() hideExportButton: boolean;\r\n  @Input() hideDuplicateButton: boolean;\r\n  @Input() hideSearchReplaceButton: boolean;\r\n  @Input() addFieldRestriction: any;\r\n  @Input() allNewElements: any;\r\n  @Input() currentData: Array<any> = null;\r\n  @Input() fieldRestrictionWithDifferentName: string;\r\n\r\n\r\n  @Output() remove: EventEmitter<any[]>;\r\n  @Output() new: EventEmitter<number>;\r\n  @Output() add: EventEmitter<any[]>;\r\n  @Output() discardChanges: EventEmitter<any[]>;\r\n  @Output() sendChanges: EventEmitter<any[]>;\r\n  @Output() duplicate: EventEmitter<any[]>;\r\n  @Output() getSelectedRows: EventEmitter<any[]>;\r\n  @Output() getAllRows: EventEmitter<{data: any[], event:string}>;\r\n  @Output() getAgGridState: EventEmitter<any[]>;\r\n  @Output() gridModified: EventEmitter<boolean>;\r\n\r\n\r\n  constructor(public dialog: MatDialog,\r\n    public translate: TranslateService,\r\n    private elRef: ElementRef) {\r\n    this.translate = translate;\r\n\r\n    this.frameworkComponents = {\r\n      btnEditRendererComponent: BtnEditRenderedComponent,\r\n      btnCheckboxRendererComponent: BtnCheckboxRenderedComponent,\r\n      btnCheckboxFilterComponent: BtnCheckboxFilterComponent\r\n    };\r\n\r\n    this.components = {\r\n      datePicker: this.getDatePicker()\r\n    };\r\n\r\n\r\n    this.remove = new EventEmitter();\r\n    this.new = new EventEmitter();\r\n    this.add = new EventEmitter();\r\n    this.discardChanges= new EventEmitter();\r\n    this.sendChanges = new EventEmitter();\r\n    this.getSelectedRows = new EventEmitter();\r\n    this.duplicate = new EventEmitter();\r\n    this.getAllRows = new EventEmitter();\r\n    this.gridModified = new EventEmitter();\r\n    this.changeCounter = 0;\r\n    this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.gridOptions = {\r\n      defaultColDef: {\r\n        sortable: true,\r\n        flex: 1,\r\n        filter: true,\r\n        editable: !this.nonEditable,\r\n        suppressMenu: true,\r\n        resizable: true,\r\n        cellStyle: (params) => {\r\n          if(params.value && params.colDef.editable){\r\n            if(this.changesMap.has(params.node.id) && this.changesMap.get(params.node.id).has(params.colDef.field)){\r\n              return {'background-color': '#E8F1DE'};\r\n            }\r\n            else{\r\n              return {'background-color': 'white'};\r\n            }\r\n          }\r\n          else {\r\n            return {'background-color': 'white'};\r\n          }\r\n        } ,\r\n      },\r\n      rowSelection: 'multiple',\r\n      singleClickEdit: true,\r\n      // suppressHorizontalScroll: true,\r\n      localeTextFunc: (key: string, defaultValue: string) => {\r\n        const data = this.translate.instant(key);\r\n        return data === key ? defaultValue : data;\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.eventRefreshSubscription) {\r\n      this._eventRefreshSubscription = this.eventRefreshSubscription.subscribe(() => {\r\n        this.changesMap.clear();\r\n        this.someStatusHasChangedToDelete=false;\r\n        this.changeCounter = 0;\r\n        this.previousChangeCounter = 0;\r\n        this.redoCounter = 0;\r\n        this.getElements();\r\n      });\r\n    }\r\n    if (this.eventGetSelectedRowsSubscription) {\r\n      this._eventGetSelectedRowsSubscription = this.eventGetSelectedRowsSubscription.subscribe(() => {\r\n        this.emitSelectedRows();\r\n      });\r\n    }\r\n    if (this.eventGetAllRowsSubscription) {\r\n      this._eventGetAllRowsSubscription = this.eventGetAllRowsSubscription.subscribe((event: string) => {\r\n        this.emitAllRows(event);\r\n      });\r\n    }\r\n\r\n    if (this.eventSaveAgGridStateSubscription) {\r\n      this._eventSaveAgGridStateSubscription = this.eventSaveAgGridStateSubscription.subscribe(() => {\r\n        this.saveAgGridState();\r\n      });\r\n    }\r\n\r\n    if (this.eventModifyStatusOfSelectedCells) {\r\n      this._eventModifyStatusOfSelectedCells = this.eventModifyStatusOfSelectedCells.subscribe((status: string) => {\r\n        this.modifyStatusSelected(status);\r\n      });\r\n    }\r\n\r\n    if (this.eventAddItemsSubscription) {\r\n      this.eventAddItemsSubscription.subscribe(\r\n        (items: any) => {\r\n          this.addItems(items);\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  firstDataRendered(): void {\r\n    if (localStorage.agGridState != undefined) {\r\n      let agGridState = JSON.parse(localStorage.agGridState)\r\n      if (agGridState.idAgGrid != undefined && agGridState.idAgGrid == this.id) {\r\n        this.gridApi.setFilterModel(agGridState.filterState);\r\n        this.gridColumnApi.setColumnState(agGridState.colState);\r\n        this.gridApi.setSortModel(agGridState.sortState);\r\n        this.searchValue = agGridState.valueSearchGeneric;\r\n        this.quickSearch();\r\n        this.removeAgGridState();\r\n      } else if (this.id != undefined) {\r\n        this.removeAgGridState();\r\n      }\r\n    }\r\n  }\r\n\r\n  onGridReady(params): void {\r\n    if (this.singleSelection) { this.gridOptions.rowSelection = 'single' }\r\n    // if (this.nonEditable) {this.gridOptions.defaultColDef.editable = false}\r\n    this.params = params;\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    for (const col of this.columnDefs) {\r\n      if(!this.someColumnIsEditable && col.editable) { this.someColumnIsEditable = true}\r\n      if (col.field === 'status') {\r\n        this.statusColumn = true;\r\n      }\r\n    }\r\n    this.getElements();\r\n    console.log(this.columnDefs);\r\n    if (this.defaultColumnSorting) {\r\n      if(!Array.isArray(this.defaultColumnSorting))\r\n      {\r\n        const sortModel = [\r\n          { colId: this.defaultColumnSorting, sort: 'asc' }\r\n        ];\r\n        this.gridApi.setSortModel(sortModel);\r\n      }\r\n      else{\r\n        let sortModel = [];\r\n        this.defaultColumnSorting.forEach(element => {\r\n          sortModel.push({ colId: element, sort: 'asc' })\r\n        });\r\n        this.gridApi.setSortModel(sortModel);\r\n      }\r\n\r\n    }\r\n    if(this.defaultHeight != null && this.defaultHeight != undefined){\r\n      this.changeHeight(this.defaultHeight)\r\n    }\r\n  }\r\n\r\n\r\n  getDatePicker() {\r\n    function Datepicker() {}\r\n    Datepicker.prototype.init = function (params) {\r\n      this.eInput = document.createElement('input');\r\n      this.eInput.value = params.value;\r\n      this.eInput.classList.add('ag-input');\r\n      this.eInput.style.height = '100%';\r\n      $(this.eInput).datepicker({ dateFormat: 'mm/dd/yy' });\r\n    };\r\n    Datepicker.prototype.getGui = function () {\r\n      return this.eInput;\r\n    };\r\n    Datepicker.prototype.afterGuiAttached = function () {\r\n      this.eInput.focus();\r\n      this.eInput.select();\r\n    };\r\n    Datepicker.prototype.getValue = function () {\r\n      return this.eInput.value;\r\n    };\r\n    Datepicker.prototype.destroy = function () {};\r\n    Datepicker.prototype.isPopup = function () {\r\n      return false;\r\n    };\r\n    return Datepicker;\r\n  }\r\n\r\n  areRowsSelected(): Boolean {\r\n    return (this.gridApi != null && this.gridApi.getSelectedNodes().length > 0)? true: false;\r\n    // if (this.gridApi != null && this.gridApi.getSelectedNodes().length > 0) {\r\n    //   return true\r\n    // } else {\r\n    //   return false\r\n    // }\r\n  }\r\n\r\n\r\n  emitSelectedRows(): void {\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.getSelectedRows.emit(selectedData);\r\n  }\r\n\r\n  emitAllRows(event: string): void {\r\n    // let rowData = [];\r\n    // this.gridApi.forEachNode(node => rowData.push(node.data));\r\n    this.getAllRows.emit({data: this.getAllCurrentData(), event: event});\r\n  }\r\n\r\n  private getAllCurrentData(): Array<any>{\r\n    let rowData = [];\r\n    this.gridApi.forEachNode(node => rowData.push(node.data));\r\n    return rowData;\r\n  }\r\n\r\n  modifyStatusSelected(status?: string): void{\r\n    let newStatus=status?status:this.newStatusRegister;\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    selectedNodes.map(node => {\r\n      node.data.status=newStatus;\r\n      node.selected=false;\r\n    } );\r\n    this.gridApi.redrawRows();\r\n  }\r\n\r\n  saveAgGridState(): void {\r\n    let agGridState = {\r\n      idAgGrid: this.id,\r\n      colState: this.gridColumnApi.getColumnState(),\r\n      filterState: this.gridApi.getFilterModel(),\r\n      sortState: this.gridApi.getSortModel(),\r\n      valueSearchGeneric: this.searchValue\r\n    };\r\n\r\n    localStorage.setItem(\"agGridState\", JSON.stringify(agGridState));\r\n\r\n  }\r\n  removeAgGridState(): void {\r\n    localStorage.removeItem(\"agGridState\")\r\n  }\r\n\r\n  getColumnKeysAndHeaders(columnkeys: Array<any>): String {\r\n    let header: Array<any> = [];\r\n    if (this.columnDefs.length == 0) { return '' };\r\n\r\n    let allColumnKeys = this.gridOptions.columnApi.getAllDisplayedColumns();\r\n    // console.log(allColumnKeys);\r\n    allColumnKeys.forEach(element => {\r\n      if (element.userProvidedColDef.headerName !== '') {\r\n        columnkeys.push(element.userProvidedColDef.field);\r\n        header.push(element.userProvidedColDef.headerName);\r\n      }\r\n\r\n\r\n    });\r\n\r\n    return header.join(\",\");\r\n  }\r\n\r\n\r\n  exportData(): void {\r\n    let columnkeys: Array<any> = [];\r\n    let customHeader: String = '';\r\n    customHeader = this.getColumnKeysAndHeaders(columnkeys)\r\n    let params = {\r\n      onlySelected: true,\r\n      columnKeys: columnkeys,\r\n      customHeader: customHeader,\r\n      skipHeader: true\r\n    };\r\n    this.gridApi.exportDataAsCsv(params);\r\n  }\r\n\r\n  quickSearch(): void {\r\n    this.gridApi.setQuickFilter(this.searchValue);\r\n  }\r\n\r\n  getElements(): void {\r\n    this.getAll()\r\n      .subscribe((items) => {\r\n        let status = this.allNewElements?'pendingCreation':'statusOK'\r\n        let newItems = [];\r\n        let condition = (this.addFieldRestriction)? this.addFieldRestriction: 'id';\r\n        items.forEach(element => {\r\n          if(this.statusColumn){\r\n            if(element.status != \"notAvailable\" && element.status != \"pendingCreation\" && element.status != \"pendingRegistration\" && element.status != \"unregisteredLayer\"){\r\n              element.status=status\r\n            }\r\n            if(this.allNewElements) { element.new = true; }\r\n          }\r\n          if(this.currentData){\r\n            if (this.checkElementAllowedToAdd(condition,element, this.currentData)) {\r\n                newItems.push(element);\r\n            }\r\n          }\r\n          \r\n        });\r\n\r\n        // if(this.statusColumn){\r\n        //   let status = this.allNewElements?'pendingCreation':'statusOK'\r\n        //   items.forEach(element => {\r\n        //     if(element.status != \"notAvailable\" && element.status != \"pendingCreation\" && element.status != \"pendingRegistration\" && element.status != \"unregisteredLayer\"){\r\n        //       element.status=status\r\n        //     }\r\n        //     if(this.allNewElements) { element.new = true; }\r\n        //   });\r\n        // }\r\n        this.rowData = this.currentData?newItems: items;\r\n        this.gridApi.setRowData(this.rowData);\r\n        this.setSize()\r\n        // this.gridApi.sizeColumnsToFit()\r\n        console.log(this.rowData);\r\n\r\n      });\r\n  }\r\n\r\n  setSize() {\r\n\r\n    var allColumnIds = [];\r\n    let columns = this.gridOptions.columnApi.getAllColumns();\r\n    columns.forEach(function (column) {\r\n      allColumnIds.push(column.colId);\r\n    });\r\n\r\n    this.gridOptions.columnApi.autoSizeColumns(allColumnIds);\r\n\r\n    let grid = this.gridOptions.api\r\n    let availableWidth = grid.gridPanel.eBodyViewport.clientWidth;\r\n\r\n    let usedWidth = grid.gridPanel.columnController.getWidthOfColsInList(columns);\r\n\r\n    if (usedWidth < availableWidth) {\r\n      grid.sizeColumnsToFit();\r\n    }\r\n\r\n  }\r\n\r\n  addItems(newItems: any[]): void {\r\n    console.log(newItems);\r\n    let itemsToAdd: Array<any> = [];\r\n    let condition = (this.addFieldRestriction)? this.addFieldRestriction: 'id';\r\n    \r\n\r\n    newItems.forEach(item => {\r\n\r\n      if (this.checkElementAllowedToAdd(condition,item, this.rowData)) {\r\n        if (this.statusColumn) {\r\n          item.status = 'pendingCreation'\r\n          item.newItem = true;\r\n        }\r\n        itemsToAdd.push(item);\r\n        this.rowData.push(item);\r\n      }\r\n      else {\r\n        console.log(`Item already exists`)\r\n      }\r\n    });\r\n    this.gridApi.updateRowData({ add: itemsToAdd });\r\n\r\n    console.log(this.columnDefs);\r\n    // params.oldValue!=undefined\r\n  }\r\n\r\n  private checkElementAllowedToAdd(condition, item, data){\r\n\r\n    let finalAddition = true;\r\n\r\n    if(Array.isArray(condition)){\r\n\r\n      for(let element of data){\r\n        let canAdd = false;\r\n\r\n        for(let currentCondition of condition){\r\n          if(element[currentCondition] != item[currentCondition]){\r\n            canAdd = true;\r\n            break;\r\n          }\r\n        }\r\n        if(!canAdd) {\r\n           finalAddition = false;\r\n           break;\r\n          }\r\n      }\r\n      return finalAddition;\r\n\r\n    }\r\n    else{\r\n      if(this.fieldRestrictionWithDifferentName){\r\n        return (item[condition] == undefined || (data.find(element => element[this.fieldRestrictionWithDifferentName] == item[condition])) == undefined)\r\n      }\r\n      return (item[condition] == undefined || (data.find(element => element[condition] == item[condition])) == undefined)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  changeHeight(value) {\r\n    let pixels = \"\";\r\n    if (value === '5') {\r\n      pixels = \"200px\"\r\n    } else if (value === '10') {\r\n      pixels = \"315px\"\r\n    } else if (value === '20') {\r\n      pixels = \"630px\"\r\n    } else {\r\n      pixels = \"1550px\"\r\n    }\r\n    this.elRef.nativeElement.parentElement.style.height = pixels;\r\n  }\r\n\r\n  removeData(): void {\r\n    this.gridApi.stopEditing(false);\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.remove.emit(selectedData);\r\n\r\n    if (this.statusColumn) {\r\n      const selectedRows = selectedNodes.map(node => node.id);\r\n      if(selectedRows.length>0) {this.someStatusHasChangedToDelete=true;}\r\n      for (const id of selectedRows) {\r\n        this.gridApi.getRowNode(id).data.status = 'pendingDelete';\r\n      }\r\n      this.gridOptions.api.refreshCells();\r\n    }\r\n    this.gridOptions.api.deselectAll();\r\n  }\r\n\r\n  newData(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.new.emit(-1);\r\n  }\r\n\r\n  onAddButtonClicked(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.add.emit(this.getAllCurrentData());\r\n  }\r\n\r\n  onDuplicateButtonClicked(): void {\r\n    this.gridApi.stopEditing(false);\r\n    if (this.changeCounter > 0) {\r\n      const dialogRef = this.dialog.open(DialogMessageComponent);\r\n      dialogRef.componentInstance.title = this.translate.instant('caution')\r\n      dialogRef.componentInstance.message = this.translate.instant('duplicateMessage')\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (result) {\r\n          if (result.event === 'Accept') {\r\n            const selectedNodes = this.gridApi.getSelectedNodes();\r\n            const selectedData = selectedNodes.map(node => node.data);\r\n            this.duplicate.emit(selectedData);\r\n          }\r\n        }\r\n      });\r\n\r\n    }\r\n    else {\r\n      const selectedNodes = this.gridApi.getSelectedNodes();\r\n      const selectedData = selectedNodes.map(node => node.data);\r\n      this.duplicate.emit(selectedData);\r\n      this.gridOptions.api.deselectAll();\r\n\r\n    }\r\n  }\r\n\r\n\r\n  applyChanges(): void {\r\n    const itemsChanged: any[] = [];\r\n    this.gridApi.stopEditing(false);\r\n    for (const key of this.changesMap.keys()) {\r\n      itemsChanged.push(this.gridApi.getRowNode(key).data);\r\n    }\r\n    this.sendChanges.emit(itemsChanged);\r\n    this.gridModified.emit(false);\r\n    this.changesMap.clear();\r\n    this.changeCounter = 0;\r\n    this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.someStatusHasChangedToDelete=false;\r\n    // this.params.colDef.cellStyle = { backgroundColor: '#FFFFFF' };\r\n    this.gridApi.redrawRows();\r\n  }\r\n\r\n\r\n\r\n  deleteChanges(): void {\r\n    this.gridApi.stopEditing(false);\r\n    let newElementsActived= this.allNewElements;\r\n\r\n    while (this.changeCounter > 0) {\r\n      this.undo();\r\n    }\r\n\r\n    this.changesMap.clear();\r\n    //this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n\r\n    if(this.statusColumn && !this.discardNonReverseStatus)\r\n    {\r\n      let rowsWithStatusModified = [];\r\n      this.gridApi.forEachNode(function(node) { \r\n        if(node.data.status === 'pendingModify' || node.data.status === 'pendingDelete') {\r\n          if(node.data.status === 'pendingDelete'){\r\n            rowsWithStatusModified.push(node.data);\r\n          }\r\n          if(node.data.newItem || newElementsActived){\r\n            node.data.status='pendingCreation'\r\n          }\r\n          else{\r\n            node.data.status='statusOK'\r\n          }\r\n        }\r\n        \r\n    });\r\n    this.someStatusHasChangedToDelete=false;\r\n    this.discardChanges.emit(rowsWithStatusModified);\r\n    this.gridModified.emit(false);\r\n  }\r\n  this.gridApi.redrawRows();\r\n\r\n    //this.params.colDef.cellStyle =  {backgroundColor: '#FFFFFF'};\r\n    //this.gridApi.redrawRows();\r\n  }\r\n\r\n\r\n  onFilterModified(): void {\r\n\r\n    this.deleteChanges();\r\n\r\n  }\r\n\r\n\r\n  undo(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.gridApi.undoCellEditing();\r\n    this.changeCounter -= 1;\r\n    if(this.changeCounter == 0) { this.gridModified.emit(false)}\r\n    this.redoCounter += 1;\r\n  }\r\n\r\n  redo(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.gridApi.redoCellEditing();\r\n    this.changeCounter += 1;\r\n    this.redoCounter -= 1;\r\n  }\r\n\r\n\r\n  onCellEditingStopped(e) {\r\n    if (this.modificationChange) {\r\n      this.changeCounter++;\r\n      if(this.changeCounter == 1) { this.gridModified.emit(true)}\r\n      this.redoCounter = 0;\r\n      this.onCellValueChanged(e);\r\n      this.modificationChange = false;\r\n    }\r\n  }\r\n\r\n\r\n  onCellValueChanged(params): void {\r\n    this.params = params;\r\n    if (this.changeCounter > this.previousChangeCounter)\r\n    // True if we have edited some cell or we have done a redo \r\n    {\r\n\r\n      if (params.oldValue !== params.value && !(params.oldValue == null && params.value === '')) {\r\n\r\n        if (!this.changesMap.has(params.node.id)) // If it's firts edit of a cell, we add it to the map and we paint it\r\n        {\r\n          const addMap: Map<string, number> = new Map<string, number>();\r\n          addMap.set(params.colDef.field, 1)\r\n          this.changesMap.set(params.node.id, addMap);\r\n          if (this.statusColumn) {\r\n            // if (this.gridApi.getRowNode(params.node.id).data.status !== 'pendingCreation') {\r\n              this.gridApi.getRowNode(params.node.id).data.status = 'pendingModify'\r\n            // }\r\n          }\r\n        }\r\n        else {\r\n          if (!this.changesMap.get(params.node.id).has(params.colDef.field)) {\r\n\r\n            this.changesMap.get(params.node.id).set(params.colDef.field, 1);\r\n          }\r\n\r\n          else {\r\n            // We already had edited this cell, so we only increment number of changes of it on the map \r\n            const currentChanges = this.changesMap.get(params.node.id).get(params.colDef.field);\r\n            this.changesMap.get(params.node.id).set(params.colDef.field, (currentChanges + 1));\r\n          }\r\n\r\n        }\r\n        this.paintCells(params, this.changesMap); //We paint the row of the edited cell \r\n        this.previousChangeCounter++; //We match the current previousChangeCounter with changeCounter\r\n      }\r\n\r\n    }\r\n    else if (this.changeCounter < this.previousChangeCounter) { // True if we have done an undo\r\n      let currentChanges = -1;\r\n      if (this.changesMap.has(params.node.id)) { currentChanges = this.changesMap.get(params.node.id).get(params.colDef.field); }\r\n\r\n      if (currentChanges === 1) { //Once the undo it's done, cell is in his initial status\r\n\r\n        this.changesMap.get(params.node.id).delete(params.colDef.field);\r\n        if (this.changesMap.get(params.node.id).size === 0) { // No more modifications in this row\r\n          this.changesMap.delete(params.node.id);\r\n          const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\r\n          if (this.statusColumn) {\r\n            if (this.gridApi.getRowNode(params.node.id).data.status !== 'pendingCreation') {\r\n              this.gridApi.getRowNode(params.node.id).data.status ='statusOK'\r\n            }\r\n          };\r\n          // We paint it white\r\n          this.gridApi.redrawRows({ rowNodes: [row] });\r\n\r\n        }\r\n        else {\r\n          this.paintCells(params, this.changesMap);\r\n        }\r\n\r\n      }\r\n      else if (currentChanges > 1) // The cell isn't in his initial state yet\r\n      {                                 //We can't do else because we can be doing an undo without changes \r\n        this.changesMap.get(params.node.id).set(params.colDef.field, (currentChanges - 1));\r\n\r\n        this.paintCells(params, this.changesMap);//Not initial state -> green background\r\n\r\n      }\r\n      this.previousChangeCounter--;  //We decrement previousChangeCounter because we have done undo\r\n    }\r\n    else { // Control of modifications without changes\r\n      if (!(params.oldValue == null && params.value === '')) {\r\n        let newValue: string;\r\n        if (params.value == null) { newValue = '' }\r\n        else { newValue = params.value.toString() }\r\n\r\n        if ((params.oldValue != undefined && params.oldValue != null && params.oldValue.toString() !== newValue.toString())\r\n          || ((params.oldValue == undefined || params.oldValue == null) && newValue != null)) {\r\n\r\n          this.modificationChange = true;\r\n          if (params.colDef.cellRenderer == \"btnCheckboxRendererComponent\") {\r\n            var undoRedoActions = {\r\n              cellValueChanges: this.gridApi.undoRedoService.cellValueChanges\r\n            };\r\n            this.gridApi.undoRedoService.pushActionsToUndoStack(undoRedoActions);\r\n            this.gridApi.undoRedoService.isFilling = false;\r\n            this.onCellEditingStopped(params);\r\n          }\r\n        }\r\n        else { this.modificationWithoutChanges(params) }\r\n\r\n      }\r\n      else { this.modificationWithoutChanges(params) }\r\n    }\r\n  }\r\n\r\n  modificationWithoutChanges(params: any) {\r\n\r\n    if (this.changesMap.has(params.node.id)) //Modification without changes in en edited cell\r\n    {\r\n      if (!this.undoNoChanges) {\r\n        this.gridApi.undoCellEditing(); // Undo to delete the change without changes internally \r\n        this.undoNoChanges = true;\r\n        this.paintCells(params, this.changesMap);  //The cell has modifications yet -> green background \r\n      }\r\n      else { this.undoNoChanges = false; }\r\n\r\n\r\n    }\r\n    else {\r\n      //With the internally undo will enter at this function, so we have to control when done the undo or not \r\n      if (!this.undoNoChanges) {\r\n        this.gridApi.undoCellEditing(); // Undo to delete the change internally\r\n        this.undoNoChanges = true;\r\n      }\r\n      else { this.undoNoChanges = false; }\r\n    }\r\n\r\n  }\r\n\r\n  getColumnIndexByColId(api: ColumnApi, colId: string): number {\r\n    return api.getAllColumns().findIndex(col => col.getColId() === colId);\r\n  }\r\n  paintCells(params: any, changesMap: Map<number, Map<string, number>>,) {\r\n    const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\r\n\r\n    // this.changeCellStyleColumns(params, changesMap, '#E8F1DE');\r\n    this.gridApi.redrawRows({ rowNodes: [row] });\r\n    // this.changeCellStyleColumns(params, changesMap, '#FFFFFF');\r\n    // We will define cellStyle white to future modifications (like filter)\r\n  }\r\n\r\n  // changeCellStyleColumns(params: any, changesMap: Map<number, Map<string, number>>, color: string) {\r\n\r\n  //   for (const key of changesMap.get(params.node.id).keys()) {\r\n  //     const columnNumber = this.getColumnIndexByColId(this.gridColumnApi, key);\r\n  //     this.gridColumnApi.columnController.gridColumns[columnNumber].colDef.cellStyle = { backgroundColor: color };\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MatFormFieldModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  _GetAllsTable:  Array<() => Observable<any>>;\r\n  _columnDefsTable: Array<any[]>;\r\n  _singleSelectionTable: Array<boolean>;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-grid',\r\n  templateUrl: './dialog-grid.component.html',\r\n  styleUrls: ['./dialog-grid.component.scss']\r\n})\r\nexport class DialogGridComponent implements OnInit {\r\n\r\n  title: string;\r\n  getAllRows: Subject<boolean> = new Subject <boolean>();\r\n  private _addButtonClickedSubscription: any;\r\n  tablesReceivedCounter: number;\r\n  allRowsReceived: Array<any[]> = [];\r\n  changeHeightButton : boolean;\r\n  heightByDefault : any;\r\n\r\n  //Inputs\r\n  themeGrid: any;\r\n  getAllsTable: Array<() => Observable<any>>;\r\n  columnDefsTable: Array<any[]>;\r\n  singleSelectionTable: Array<boolean>;\r\n  titlesTable: Array<string>;\r\n  orderTable: Array<string> = [];\r\n  addButtonClickedSubscription: Observable <boolean> ;\r\n  nonEditable: boolean;\r\n  addFieldRestriction: Array<any> = [];\r\n  fieldRestrictionWithDifferentName: Array<any> = [];\r\n  currentData: Array<any> = [];\r\n\r\n  //Outputs\r\n  @Output() joinTables : EventEmitter<Array<any[]>>;\r\n\r\n  \r\n\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogGridComponent>) {\r\n    \r\n    this.joinTables = new EventEmitter();\r\n    // this.nonEditable = true;\r\n    this.tablesReceivedCounter = 0;\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.addButtonClickedSubscription) {\r\n      this._addButtonClickedSubscription = this.addButtonClickedSubscription.subscribe(() => {\r\n        this.getAllSelectedRows();\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  getAllSelectedRows() {\r\n    this.getAllRows.next(true);\r\n  }\r\n\r\n  joinRowsReceived(data: any[])\r\n  {\r\n      this.allRowsReceived.push(data);\r\n      this.tablesReceivedCounter++;\r\n      if(this.tablesReceivedCounter === this.getAllsTable.length)\r\n      {\r\n        this.doAdd(this.allRowsReceived);\r\n        console.log(this.allRowsReceived);\r\n      }\r\n  }\r\n\r\n  doAdd(rowsToAdd){\r\n    this.dialogRef.close({event:'Add',data: rowsToAdd});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { Component, ElementRef, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormGroup,FormControl,Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog'; \r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DialogMessageComponent } from '../dialog-message/dialog-message.component';\r\n\r\n@Component({\r\n  selector: 'app-dialog-form',\r\n  templateUrl: './dialog-form.component.html',\r\n  styleUrls: ['./dialog-form.component.scss']\r\n})\r\nexport class DialogFormComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  title: string;\r\n  HTMLReceived;\r\n  constructor(\r\n    private dialogRef: MatDialogRef<DialogFormComponent>,\r\n    public dialog: MatDialog,\r\n    private translate: TranslateService) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  doAdd(){\r\n    if(this.form.valid) { this.dialogRef.close({event:'Add'}); }\r\n    else {\r\n       const dialogRef = this.dialog.open(DialogMessageComponent);\r\n       dialogRef.componentInstance.title = this.translate.instant(\"atention\")\r\n       dialogRef.componentInstance.message = this.translate.instant(\"requiredFieldMessage\")\r\n       dialogRef.componentInstance.hideCancelButton = true;\r\n       dialogRef.afterClosed().subscribe();\r\n    }\r\n\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { Component, EventEmitter, Injectable, Input, Output,ElementRef, ViewChild } from '@angular/core';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { BehaviorSubject, Observable, of as observableOf } from 'rxjs';\r\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { forEach } from 'jszip';\r\n\r\n/**\r\n * File node data with nested structure.\r\n * Each node has a name, and a type or a list of children.\r\n */\r\nexport class FileNode {\r\n  id: string;\r\n  children: FileNode[];\r\n  name: string;\r\n  type: any;\r\n  active: any\r\n  cartographyId: any\r\n  cartographyName: any\r\n  datasetURL: any\r\n  description: any\r\n  filterGetFeatureInfo: any\r\n  filterGetMap: any\r\n  filterSelectable: any\r\n  isFolder: any\r\n  metadataURL: any\r\n  order: any\r\n  parent: any\r\n  queryableActive: any\r\n  radio: any\r\n  tooltip: any\r\n  _links: any\r\n  status: any\r\n}\r\n\r\n/** Flat node with expandable and level information */\r\nexport class FileFlatNode {\r\n  constructor(\r\n    public expandable: boolean,\r\n    public name: string,\r\n    public level: number,\r\n    public type: any,\r\n    public id: string,\r\n    public status: string\r\n  ) { }\r\n}\r\n\r\n\r\n\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has name and type.\r\n * For a directory, it has name and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\n@Injectable()\r\nexport class FileDatabase {\r\n  dataChange = new BehaviorSubject<FileNode[]>([]);\r\n  get data(): any { return this.dataChange.value; }\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  initialize(dataObj, allNewElements) {\r\n\r\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\r\n    //     file node as children.\r\n    const data = this.buildFileTree(dataObj, 0, allNewElements);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /**\r\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n   * The return value is the list of `FileNode`.\r\n   */\r\n  buildFileTree(arrayTreeNodes: any[], level: number, allNewElements: any) {\r\n    var map = {};\r\n    if(arrayTreeNodes.length===0)\r\n    {\r\n      let root = {\r\n        isFolder:true,\r\n        name:'Root',\r\n        type: 'folder',\r\n        isRoot: true,\r\n        order: 0,\r\n        children: [],\r\n        id:0\r\n      }\r\n      map['root']=root;\r\n    }\r\n    else{\r\n      arrayTreeNodes.forEach((treeNode) => {\r\n        var obj = treeNode;\r\n        obj.children = [];\r\n        obj.type= (treeNode.isFolder)? \"folder\" : \"node\";\r\n        if(allNewElements) {\r\n          obj.status='pendingCreation';\r\n          if(obj.id) { obj.id = obj.id * -1 }\r\n          if(obj.parent) { obj.parent = obj.parent * -1 }\r\n        }\r\n  \r\n        if(!map[obj.id]) {map[obj.id] = obj;}\r\n        else{\r\n          let previousChildren= map[obj.id].children\r\n          map[obj.id] = obj;\r\n          map[obj.id].children=previousChildren\r\n        }\r\n        var parent = obj.parent || 'root';\r\n        if (!map[parent]) {\r\n          map[parent] = {\r\n            children: []\r\n          };\r\n        }\r\n        map[parent].children.push(obj);\r\n      });\r\n      map['root'].type='folder';\r\n      map['root'].name='Root';\r\n      map['root'].order=0;\r\n      map['root'].isFolder=true;\r\n      map['root'].isRoot=true;\r\n    }\r\n\r\n\r\n    return map['root'];\r\n  }\r\n  \r\n\r\n  deleteItem(node: FileNode, changedData:any) {\r\n    this.deleteNode(changedData.children, node);\r\n    this.dataChange.next(changedData);\r\n  }\r\n\r\n  deleteNode(nodes: FileNode[], nodeToDelete: FileNode) {\r\n    const index = nodes.indexOf(nodeToDelete, 0);\r\n    if (index > -1) {\r\n      nodes.splice(index, 1);\r\n    } else {\r\n      nodes.forEach(node => {\r\n        if (node.children && node.children.length > 0) {\r\n          this.deleteNode(node.children, nodeToDelete);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  setOrder(data: any[]){\r\n    for(let i=0; i< data.length; i++){\r\n      data[i].order=i;\r\n      if(! data[i].status) { data[i].status=\"Modified\"; } \r\n    }\r\n    return data;\r\n   }\r\n\r\n  copyPasteItem(from: FileNode, to: FileNode, changedData:any): FileNode {\r\n    const newItem = this.insertItem(to, from,changedData);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  copyPasteItemAbove(from: FileNode, to: FileNode,changedData:any): FileNode {\r\n    const newItem = this.insertItemAbove(to, from,changedData);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  copyPasteItemBelow(from: FileNode, to: FileNode,changedData:any): FileNode {\r\n    const newItem = this.insertItemBelow(to, from,changedData);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  /** Add an item to to-do list */\r\n  \r\n  getNewItem(node:FileNode){\r\n    const newItem = {\r\n      name: node.name,\r\n      children: node.children,\r\n      type: node.type,\r\n      id: node.id, \r\n      active: node.active,\r\n      cartographyId: node.cartographyId,\r\n      cartographyName: node.cartographyName,\r\n      datasetURL: node.datasetURL,\r\n      description: node.description,\r\n      filterGetFeatureInfo: node.filterGetFeatureInfo,\r\n      filterGetMap: node.filterGetMap,\r\n      filterSelectable: node.filterSelectable,\r\n      isFolder: node.isFolder,\r\n      metadataURL: node.metadataURL,\r\n      order: node.order,\r\n      queryableActive: node.queryableActive,\r\n      radio: node.radio,\r\n      tooltip: node.tooltip,\r\n      _links: node._links } as FileNode;\r\n\r\n    return newItem;\r\n  }\r\n\r\n  insertItem(parent: FileNode, node: FileNode,changedData:any): FileNode {\r\n    if (!parent.children) {\r\n      parent.children = [];\r\n    }\r\n    const newItem = this.getNewItem(node)\r\n    newItem.parent = parent==null || parent.id==undefined?null:parent.id;\r\n\r\n    parent.children.push(newItem);\r\n    this.setOrder(parent.children)\r\n    this.dataChange.next(changedData);\r\n    return newItem;\r\n  }\r\n\r\n  insertItemAbove(node: FileNode, nodeDrag: FileNode,changedData:any): FileNode {\r\n    const parentNode = this.getParentFromNodes(node,changedData);\r\n    const newItem = this.getNewItem(nodeDrag)\r\n    newItem.parent = parentNode==null || parentNode.id==undefined?null:parentNode.id;\r\n  \r\n    if (parentNode != null) {\r\n      parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\r\n      this.setOrder(parentNode.children)\r\n    } else {\r\n      changedData.children.splice(changedData.children.indexOf(node), 0, newItem);\r\n      this.setOrder(changedData.children)\r\n    }\r\n    this.dataChange.next(changedData);\r\n    return newItem;\r\n  }\r\n\r\n  insertItemBelow(node: FileNode, nodeDrag: FileNode,changedData:any): FileNode {\r\n    const parentNode = this.getParentFromNodes(node,changedData);\r\n   \r\n    const newItem = this.getNewItem(nodeDrag)\r\n    newItem.parent = parentNode==null || parentNode.id==undefined?null:parentNode.id;\r\n\r\n    if (parentNode != null) {\r\n      parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\r\n      this.setOrder(parentNode.children)\r\n    } else {\r\n      changedData.children.splice(changedData.children.indexOf(node) + 1, 0, newItem);\r\n      this.setOrder(changedData.children)\r\n    }\r\n    this.dataChange.next(changedData);\r\n    return newItem;\r\n  }\r\n\r\n  \r\n  getParentFromNodes(node: FileNode,changedData:any): FileNode {\r\n    for (let i = 0; i < changedData.children.length; ++i) {\r\n      const currentRoot =  changedData.children[i];\r\n      const parent = this.getParent(currentRoot, node);\r\n      if (parent != null) {\r\n        return parent;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  \r\n  getParent(currentRoot: FileNode, node: FileNode): FileNode {\r\n    if (currentRoot.children && currentRoot.children.length > 0) {\r\n      for (let i = 0; i < currentRoot.children.length; ++i) {\r\n        const child = currentRoot.children[i];\r\n        if (child === node) {\r\n          return currentRoot;\r\n        } else if (child.children && child.children.length > 0) {\r\n          const parent = this.getParent(child, node);\r\n          if (parent != null) {\r\n            return parent;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @title Tree with flat nodes\r\n */\r\n@Component({\r\n  selector: 'app-data-tree',\r\n  templateUrl: 'data-tree.component.html',\r\n  styleUrls: ['data-tree.component.scss'],\r\n  providers: [FileDatabase]\r\n})\r\nexport class DataTreeComponent {\r\n  @Output() createNode: EventEmitter<any>;\r\n  @Output() createFolder: EventEmitter<any>;\r\n  @Output() emitNode: EventEmitter<any>;\r\n  @Output() emitAllNodes: EventEmitter<any>;\r\n  @Input() eventNodeUpdatedSubscription: Observable <any> ;\r\n  @Input() eventCreateNodeSubscription: Observable <any> ;\r\n  @Input() eventGetAllRowsSubscription: Observable <any> ;\r\n  @Input() eventRefreshSubscription: Observable <any> ;\r\n  private _eventNodeUpdatedSubscription: any;\r\n  private _eventCreateNodeSubscription: any;\r\n  private _eventGetAllRowsSubscription: any;\r\n  private _eventRefreshSubscription: any;\r\n  treeControl: FlatTreeControl<FileFlatNode>;\r\n  treeFlattener: MatTreeFlattener<FileNode, FileFlatNode>;\r\n  dataSource: MatTreeFlatDataSource<FileNode, FileFlatNode>;\r\n  // expansion model tracks expansion state\r\n  expansionModel = new SelectionModel<string>(true);\r\n  dragging = false;\r\n  expandTimeout: any;\r\n  expandDelay = 1000;\r\n  validateDrop = false;\r\n  treeData: any;\r\n\r\n  @Input() getAll: () => Observable<any>;\r\n  @Input() allNewElements: any;\r\n\r\n\r\n  /* Drag and drop */\r\n  dragNode: any;\r\n  dragNodeExpandOverWaitTimeMs = 1500;\r\n  dragNodeExpandOverNode: any;\r\n  dragNodeExpandOverTime: number;\r\n  dragNodeExpandOverArea: string;\r\n  @ViewChild('emptyItem') emptyItem: ElementRef;\r\n\r\n    /** Map from flat node to nested node. This helps us finding the nested node to be modified */\r\n    flatNodeMap = new Map<FileFlatNode, FileNode>();\r\n\r\n    /** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\n    nestedNodeMap = new Map<FileNode, FileFlatNode>();\r\n\r\n\r\n  constructor(public database: FileDatabase) {\r\n    this.emitNode = new EventEmitter();\r\n    this.createNode = new EventEmitter();\r\n    this.createFolder = new EventEmitter();\r\n    this.emitAllNodes = new EventEmitter();\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this._getLevel,\r\n      this._isExpandable, this._getChildren);\r\n    this.treeControl = new FlatTreeControl<FileFlatNode>(this._getLevel, this._isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n \r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n    if(this.eventNodeUpdatedSubscription)\r\n    {\r\n      this.eventNodeUpdatedSubscription.subscribe(\r\n        (node) => {\r\n          this.updateNode(node);\r\n        }\r\n      )\r\n    }\r\n    if(this.eventCreateNodeSubscription)\r\n    {\r\n      this.eventCreateNodeSubscription.subscribe(\r\n        (node) => {\r\n          if(node.isFolder) this.createNewFolder(node);\r\n          else this.createNewNode(node);\r\n        }\r\n      )\r\n    }\r\n\r\n    if (this.eventGetAllRowsSubscription) {\r\n      this._eventGetAllRowsSubscription = this.eventGetAllRowsSubscription.subscribe(() => {\r\n        this.emitAllRows();\r\n      });\r\n    }\r\n\r\n    if (this.eventRefreshSubscription) {\r\n      this._eventRefreshSubscription = this.eventRefreshSubscription.subscribe(() => {\r\n        this.getElements();\r\n      });\r\n    }\r\n    \r\n    this.getElements();\r\n  }\r\n\r\n  getElements(): void {\r\n    this.getAll()\r\n    .subscribe((items) => {\r\n      this.treeData = items;\r\n      this.database.initialize(this.treeData, this.allNewElements);\r\n      this.database.dataChange.subscribe(data => this.rebuildTreeForData([data]));\r\n    });\r\n  }\r\n\r\n\r\n  transformer = (node: FileNode, level: number) => {\r\n    const existingNode = this.nestedNodeMap.get(node);\r\n    const flatNode = existingNode && existingNode.name === node.name\r\n      ? existingNode\r\n      : new FileFlatNode((node.children && node.children.length > 0),node.name,level,node.type,node.id,node.status);\r\n\r\n    this.flatNodeMap.set(flatNode, node);\r\n    this.nestedNodeMap.set(node, flatNode);\r\n    return flatNode;\r\n  \r\n  }\r\n  private _getLevel = (node: FileFlatNode) => node.level;\r\n  private _isExpandable = (node: FileFlatNode) => node.expandable;\r\n  private _getChildren = (node: FileNode): Observable<FileNode[]> => observableOf(node.children);\r\n  hasChild = (_: number, _nodeData: FileFlatNode) => _nodeData.expandable;\r\n\r\n\r\n  /**\r\n   * This constructs an array of nodes that matches the DOM\r\n   */\r\n  visibleNodes(): FileNode[] {\r\n    const result = [];\r\n\r\n    function addExpandedChildren(node: FileNode, expanded: string[]) {\r\n      result.push(node);\r\n      if (expanded.indexOf(node.id) != -1) {\r\n        node.children.map((child) => addExpandedChildren(child, expanded));\r\n      }\r\n    }\r\n    this.dataSource.data.forEach((node) => {\r\n      addExpandedChildren(node, this.expansionModel.selected);\r\n    });\r\n    return result;\r\n  }\r\n\r\n\r\n   findNodeSiblings(arr: Array<any>, id: string): Array<any> {\r\n    let result, subResult;\r\n    arr.forEach((item, i) => {\r\n      if (item.id === id) {\r\n        result = arr;\r\n      } else if (item.children) {\r\n        subResult = this.findNodeSiblings(item.children, id);\r\n        if (subResult) result = subResult;\r\n      }\r\n    });\r\n    return result;\r\n\r\n  }\r\n\r\n\r\n  handleDragStart(event, node) {\r\n    // Required by Firefox (https://stackoverflow.com/questions/19055264/why-doesnt-html5-drag-and-drop-work-in-firefox)\r\n    event.dataTransfer.setData('foo', 'bar');\r\n    event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\r\n    this.dragNode = node;\r\n    this.treeControl.collapse(node);\r\n  }\r\n\r\n  handleDragOver(event, node) {\r\n    event.preventDefault();\r\n\r\n    // Handle node expand\r\n    if (node === this.dragNodeExpandOverNode) {\r\n      if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\r\n        if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\r\n          this.treeControl.expand(node);\r\n        }\r\n      }\r\n    } else {\r\n      this.dragNodeExpandOverNode = node;\r\n      this.dragNodeExpandOverTime = new Date().getTime();\r\n    }\r\n\r\n    // Handle drag area\r\n    const percentageX = event.offsetX / event.target.clientWidth;\r\n    const percentageY = event.offsetY / event.target.clientHeight;\r\n    if (percentageY < 0.25) {\r\n      this.dragNodeExpandOverArea = 'above';\r\n    } else if (percentageY > 0.75) {\r\n      this.dragNodeExpandOverArea = 'below';\r\n    } else {\r\n      this.dragNodeExpandOverArea = 'center';\r\n    }\r\n  }\r\n\r\n  handleDrop(event, node) {\r\n    event.preventDefault();\r\n    const changedData = JSON.parse(JSON.stringify(this.dataSource.data))\r\n\r\n    \r\n    let toFlatNode;\r\n    if(node.id === undefined) { toFlatNode=changedData[0] }\r\n    else{\r\n      toFlatNode= this.findNodeSiblings(changedData[0].children, node.id).find(nodeAct => nodeAct.id === node.id);\r\n    }\r\n    let fromFlatNode;\r\n    if( this.dragNode.id === undefined) { fromFlatNode=changedData[0] }\r\n    else{\r\n      fromFlatNode = this.findNodeSiblings(changedData[0].children, this.dragNode.id).find(nodeAct => nodeAct.id === this.dragNode.id);\r\n    }\r\n    if (this.dragNode.status!=\"pendingDelete\" && node !== this.dragNode && (this.dragNodeExpandOverArea !== 'center' || (this.dragNodeExpandOverArea === 'center' && toFlatNode.isFolder))) {\r\n      let newItem: FileNode;\r\n\r\n      if (this.dragNodeExpandOverArea === 'above') {\r\n        newItem = this.database.copyPasteItemAbove(fromFlatNode,toFlatNode,changedData[0]);\r\n      } else if (this.dragNodeExpandOverArea === 'below') {\r\n        newItem = this.database.copyPasteItemBelow(fromFlatNode,toFlatNode,changedData[0]);\r\n      } else {\r\n        newItem = this.database.copyPasteItem(fromFlatNode, toFlatNode,changedData[0]);\r\n      }    \r\n      let parentLvl=this.treeControl.dataNodes.find((n) => n.id === fromFlatNode.id).level;\r\n      fromFlatNode.children.forEach(child=>{\r\n        this.treeControl.dataNodes.find((n) => n.id === child.id).level=parentLvl+1\r\n      });\r\n      this.database.deleteItem(fromFlatNode,changedData[0]);\r\n      this.treeControl.expandDescendants(this.nestedNodeMap.get(newItem));\r\n    }\r\n   \r\n    this.dragNode = null;\r\n    this.dragNodeExpandOverNode = null;\r\n    this.dragNodeExpandOverTime = 0;\r\n  }\r\n\r\n  handleDragEnd(event) {\r\n    this.dragNode = null;\r\n    this.dragNodeExpandOverNode = null;\r\n    this.dragNodeExpandOverTime = 0;\r\n  }\r\n\r\n  /**\r\n   * The following methods are for persisting the tree expand state\r\n   * after being rebuilt\r\n   */\r\n\r\n   sortByOrder(data: any[]){\r\n    // data.sort((a,b) => a.order.toString().localeCompare( b.order.toString()));\r\n    data.sort((a,b) => (a.order > b.order) ? 1 : ((b.order > a.order) ? -1 : 0));\r\n    data.forEach((item) => {\r\n      if (item.children.length>0) {\r\n        this.sortByOrder(item.children);\r\n      }\r\n\r\n    });\r\n   }\r\n\r\n   setOrder(data: any[]){\r\n    for(let i=0; i< data.length; i++){\r\n      data[i].order=i;\r\n      if(! data[i].status) { data[i].status=\"Modified\"; } \r\n    }\r\n    return data;\r\n   }\r\n\r\n  rebuildTreeForData(data: any[]) {\r\n    //this.dataSource.data = data;\r\n    this.sortByOrder(data);\r\n    this.dataSource.data = [];\r\n    this.dataSource.data = data;\r\n    this.treeControl.expansionModel.selected.forEach((nodeAct) => {\r\n      if(nodeAct){\r\n        const node = this.treeControl.dataNodes.find((n) => n.id === nodeAct.id);\r\n        this.treeControl.expand(node);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getParentNode(node: FileFlatNode): FileFlatNode | null {\r\n    const currentLevel = node.level;\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n      if (currentNode.level < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  updateNode(nodeUpdated)\r\n  {\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    const siblings = this.findNodeSiblings(dataToChange, nodeUpdated.id);\r\n    let index= siblings.findIndex(node => node.id === nodeUpdated.id)\r\n    siblings[index]=nodeUpdated;\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n  createNewFolder(newFolder)\r\n  {\r\n    newFolder.type=\"folder\";\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    if(newFolder.parent === null) {\r\n      newFolder.order=dataToChange[0].children.length;\r\n      dataToChange[0].children.push(newFolder)\r\n    }\r\n    else{\r\n      const siblings = this.findNodeSiblings(dataToChange, newFolder.parent);\r\n      let index= siblings.findIndex(node => node.id === newFolder.parent);\r\n      newFolder.order=siblings[index].children.length;\r\n      siblings[index].children.push(newFolder)\r\n    }\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n  createNewNode(newNode)\r\n  {\r\n    newNode.type=\"node\";\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    if(newNode.parent === null) {\r\n      newNode.order=dataToChange[0].children.length;\r\n      dataToChange[0].children.push(newNode)\r\n    }\r\n    else{\r\n    const siblings = this.findNodeSiblings(dataToChange, newNode.parent);\r\n    let index= siblings.findIndex(node => node.id === newNode.parent);\r\n    newNode.order=siblings[index].children.length;\r\n    siblings[index].children.push(newNode)\r\n    }\r\n\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n\r\n\r\n  onButtonClicked(id, button: string)\r\n  {\r\n    const changedData = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    const siblings = this.findNodeSiblings(changedData, id);\r\n    let nodeClicked= siblings.find(node => node.id === id);\r\n    if(button ==='edit')  {this.emitNode.emit(nodeClicked)}\r\n    else if(button === 'newFolder') {this.createFolder.emit(nodeClicked)}\r\n    else if(button === 'newNode') {this.createNode.emit( nodeClicked)}\r\n    else if(button === 'delete') {\r\n      // let children= this.getAllChildren(nodeClicked.children)\r\n      // children.forEach(children => {\r\n      //   children.status='pendingDelete';\r\n      // });\r\n      this.deleteChildren(nodeClicked.children);\r\n      // nodeClicked.children=children\r\n      nodeClicked.status='pendingDelete'\r\n      \r\n      this.rebuildTreeForData(changedData);\r\n    }\r\n\r\n  }\r\n\r\n  emitAllRows()\r\n  {\r\n    const dataToEmit = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    let allRows = this.getAllChildren(dataToEmit); \r\n    this.emitAllNodes.emit(allRows);\r\n  }\r\n\r\n  getAllChildren(arr)\r\n  {\r\n    let result = [];\r\n    let subResult;\r\n    arr.forEach((item, i) => {\r\n      if (item.children.length>0) {\r\n        subResult = this.getAllChildren(item.children);\r\n        if (subResult) result.push(...subResult);\r\n      }\r\n      result.push(item);\r\n\r\n    });\r\n    return result;\r\n  }\r\n\r\n  deleteChildren(arr)\r\n  {\r\n    arr.forEach((item, i) => {\r\n      if (item.children.length>0) {\r\n        this.deleteChildren(item.children);\r\n      }\r\n      item.status='pendingDelete'\r\n\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconRegistry } from \"@angular/material/icon\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-translation',\r\n  templateUrl: './dialog-translation.component.html',\r\n  styleUrls: ['./dialog-translation.component.scss']\r\n})\r\nexport class DialogTranslationComponent implements OnInit {\r\n\r\n  translationForm: FormGroup;\r\n  translationsMap:  Map<string, any>;\r\n  languageByDefault:  string;\r\n  languagesAvailables: Array<any>;\r\n  catalanAvailable = false;\r\n  catalanValue: string;\r\n  spanishAvailable = false;\r\n  spanishValue: string;\r\n  englishAvailable = false;\r\n  englishValue: string;\r\n  araneseAvailable = false;\r\n  araneseValue: string;\r\n  frenchAvailable = false;\r\n  frenchValue: string;\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogTranslationComponent>,\r\n    private matIconRegistry: MatIconRegistry,\r\n    private domSanitizer: DomSanitizer) { \r\n    this.initializeTranslationForm();\r\n    this.matIconRegistry.addSvgIcon(\r\n      `icon_lang_ca`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/img/flag_ca.svg')\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      `icon_lang_es`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/img/flag_es.svg')\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      `icon_lang_en`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/img/flag_en.svg')\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      `icon_lang_oc`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/img/flag_oc.svg')\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      `icon_lang_fr`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/img/flag_fr.svg')\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.checkLanguagesAvailables();\r\n    this.checkTranslationsAlreadyDone();\r\n    // if(this.catalanValue != null){\r\n    //   this.translationForm.patchValue({\r\n    //     catalanValue: this.catalanValue\r\n    //   })\r\n    // }\r\n    // if(this.spanishValue != null){\r\n    //   this.translationForm.patchValue({\r\n    //     spanishValue: this.spanishValue\r\n    //   })\r\n    // }\r\n    // if(this.englishValue != null){\r\n    //   this.translationForm.patchValue({\r\n    //     englishValue: this.englishValue\r\n    //   })\r\n    // }\r\n    // if(this.araneseValue != null){\r\n    //   this.translationForm.patchValue({\r\n    //     araneseValue: this.araneseValue\r\n    //   })\r\n    // }\r\n    // if(this.frenchValue != null){\r\n    //   this.translationForm.patchValue({\r\n    //     frenchValue: this.frenchValue\r\n    //   })\r\n    // }\r\n  }\r\n\r\n  checkLanguagesAvailables(): void {\r\n    this.languagesAvailables.forEach(element => {\r\n      if(element.shortname == 'ca' && this.languageByDefault!= 'ca') {  this.catalanAvailable = true }\r\n      if(element.shortname == 'es' && this.languageByDefault!= 'es') {  this.spanishAvailable = true }\r\n      if(element.shortname == 'en' && this.languageByDefault!= 'en') {  this.englishAvailable = true }\r\n      if(element.shortname == 'oc-aranes' && this.languageByDefault!= 'oc-aranes') {  this.araneseAvailable = true }\r\n      if(element.shortname == 'fr' && this.languageByDefault!= 'fr') {  this.frenchAvailable = true }\r\n    });\r\n  }\r\n\r\n  checkTranslationsAlreadyDone(): void {\r\n    this.translationsMap.forEach((value: any, key: string) => {\r\n      if(key == 'ca' && value && value.translation) { this.translationForm.patchValue({ catalanValue: value.translation }) }\r\n      if(key == 'es' && value && value.translation) { this.translationForm.patchValue({ spanishValue: value.translation }) }\r\n      if(key == 'en' && value && value.translation) { this.translationForm.patchValue({ englishValue: value.translation }) }\r\n      if(key == 'oc-aranes' && value && value.translation) { this.translationForm.patchValue({ araneseValue: value.translation }) }\r\n      if(key == 'fr' && value && value.translation) { this.translationForm.patchValue({ frenchValue: value.translation }) }\r\n  });\r\n  }\r\n\r\n  initializeTranslationForm(): void {\r\n\r\n    this.translationForm = new FormGroup({\r\n      catalanValue: new FormControl(null, []),\r\n      spanishValue: new FormControl(null, []),\r\n      englishValue: new FormControl(null, []),\r\n      araneseValue: new FormControl(null, []),\r\n      frenchValue: new FormControl(null, []),\r\n    })\r\n  }\r\n\r\n  doAccept(){\r\n    if (this.translationsMap.has(\"ca\") && this.translationForm.value.catalanValue) { this.translationsMap.get('ca').translation = this.translationForm.value.catalanValue }\r\n    if (this.translationsMap.has(\"es\") && this.translationForm.value.spanishValue) { this.translationsMap.get('es').translation = this.translationForm.value.spanishValue }\r\n    if (this.translationsMap.has(\"en\") && this.translationForm.value.englishValue) { this.translationsMap.get('en').translation = this.translationForm.value.englishValue }\r\n    if (this.translationsMap.has(\"oc-aranes\") && this.translationForm.value.araneseValue) { this.translationsMap.get('oc-aranes').translation = this.translationForm.value.araneseValue }\r\n    if (this.translationsMap.has(\"fr\") && this.translationForm.value.frenchValue) { this.translationsMap.get('fr').translation = this.translationForm.value.frenchValue }\r\n    this.dialogRef.close({event:'Accept', data: this.translationsMap});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnChanges, ViewChild, ElementRef, Input, ViewEncapsulation } from '@angular/core';\r\nimport * as d3 from 'd3';\r\n\r\n\r\n@Component({\r\n  selector: 'app-datagraph',\r\n  templateUrl: './datagraph.component.html',\r\n  styleUrls: ['./datagraph.component.scss']\r\n})\r\nexport class DatagraphComponent implements OnInit {\r\n\r\n  @ViewChild('chart',{static: true}) private chartContainer: ElementRef;\r\n  @Input() private data: Array<any>;\r\n  @Input() private type;\r\n  private margin: any = { top: 20, bottom: 60, left: 40, right: 40};\r\n  private margin2 = 80;\r\n  private chart: any;\r\n  private width: number;\r\n  private height: number;\r\n  private xScale: any;\r\n  private yScale: any;\r\n  private colors: any;\r\n  private xAxis: any;\r\n  private yAxis: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n      if(this.type == \"bar\"){\r\n        this.createBarChart();\r\n        if (this.data) {\r\n          this.updateBarChart(); \r\n        }\r\n      }\r\n      \r\n  }\r\n  \r\n\r\n  ngOnChanges() {\r\n    if(this.type == \"bar\")\r\n    {\r\n      if (this.chart) {\r\n        this.updateBarChart();\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  createBarChart() {\r\n    let element = this.chartContainer.nativeElement;\r\n    this.width = element.offsetWidth - this.margin.left - this.margin.right;\r\n    this.height = element.offsetHeight - this.margin.top - this.margin.bottom;\r\n    let svg = d3.select(element).append('svg')\r\n      .attr('width', '100%')\r\n      .attr(\"height\", '100%')\r\n\r\n    // chart plot area\r\n    this.chart = svg.append('g')\r\n      .attr('class', 'bars')\r\n      .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\r\n      \r\n      const barGroups = this.chart.selectAll()\r\n      .data(this.data)\r\n      .enter()\r\n      .append('g')\r\n\r\n  \r\n\r\n    // define X & Y domains\r\n    let xDomain = this.data.map(d => d.index);\r\n    let yDomain = [0, (d3.max(this.data, d => d.value))];\r\n\r\n    // create scales\r\n    this.xScale = d3.scaleBand().padding(0.3).domain(xDomain).rangeRound([0, this.width]);\r\n    this.yScale = d3.scaleLinear().domain(yDomain).range([this.height, 0]);\r\n\r\n    // bar colors\r\n   // this.colors = d3.scaleLinear().domain([0, this.data.length]).range(<any[]>['red', 'blue']);\r\n    \r\n    barGroups \r\n      .append('text')\r\n      .attr('class', 'value')\r\n      .attr('x', (a) => this.xScale(a.index) + this.xScale.bandwidth() / 2)\r\n      .attr('y', (a) => this.yScale(a.value)-5)\r\n      .attr('text-anchor', 'middle')\r\n      .style(\"font-size\", 9)\r\n      .style(\"fill\", \"black\")\r\n      .text((a) => `${a.value}`)\r\n\r\n\r\n    // x & y axis\r\n    this.xAxis = svg.append('g')\r\n      .attr('class', 'axis axis-x')\r\n      .attr('transform', `translate(${this.margin.left}, ${this.margin.top + this.height})`)\r\n      .call(d3.axisBottom(this.xScale))\r\n      .selectAll(\"text\")\r\n      .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n      .style(\"text-anchor\", \"end\")\r\n      .style(\"font-size\", 9)\r\n      .style(\"fill\", \"black\")\r\n\r\n      \r\n    this.yAxis = svg.append('g')\r\n      .attr('class', 'axis axis-y')\r\n      .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\r\n      .call(d3.axisLeft(this.yScale))\r\n      .selectAll(\"text\")\r\n      .style(\"font-size\", 9)\r\n      .style(\"fill\", \"black\")\r\n\r\n      \r\n  }\r\n\r\n  updateBarChart() {\r\n    // update scales & axis\r\n    this.xScale.domain(this.data.map(d => d.index));\r\n    this.yScale.domain([0,(d3.max(this.data, d => d.value))]);\r\n    this.xAxis.transition().call(d3.axisBottom(this.xScale));\r\n    this.yAxis.transition().call(d3.axisLeft(this.yScale));\r\n\r\n    let update = this.chart.selectAll('.bar')\r\n      .data(this.data);\r\n\r\n    // remove exiting bars\r\n    update.exit().remove();\r\n\r\n    // update existing bars\r\n    this.chart.selectAll('.bar').transition()\r\n      .attr('x', d => this.xScale(d.index))\r\n      .attr('y', d => this.yScale(d.value))\r\n      .attr('width', d => this.xScale.bandwidth())\r\n      .attr('height', d => this.height - this.yScale(d[1]))\r\n      .style('fill', '#be7d27');\r\n\r\n    // add new bars\r\n    update\r\n      .enter()\r\n      .append('rect')\r\n      .attr('class', 'bar')\r\n      .attr('x', d => this.xScale(d.index))\r\n      .attr('y', d => this.yScale(d.value))\r\n      .attr('height', d => this.height - this.yScale(d.value))\r\n      .attr('width', this.xScale.bandwidth())\r\n      .style('fill', '#be7d27')\r\n      .transition()\r\n      .delay((d, i) => i * 10)\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n//import * as ol from 'openlayers';\r\nimport { TranslateModule, TranslateLoader, TranslateService } from '@ngx-translate/core';\r\nimport { registerLocaleData } from '@angular/common';\r\n//import { AngularHalModule } from 'dist/sitmun-frontend-core/';\r\n\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport localeCa from '@angular/common/locales/ca';\r\nimport localeEs from '@angular/common/locales/es';\r\n// import { SitmunFrontendCoreModule } from 'dist/sitmun-frontend-core/';\r\nimport { DataGridComponent } from './data-grid/data-grid.component';\r\n\r\nimport { AgGridModule } from '@ag-grid-community/angular';\r\n\r\nimport {MaterialModule} from './material-module';\r\n\r\nimport { BtnEditRenderedComponent } from './btn-edit-rendered/btn-edit-rendered.component';\r\nimport { BtnCheckboxRenderedComponent } from './btn-checkbox-rendered/btn-checkbox-rendered.component';\r\nimport { BtnCheckboxFilterComponent } from './btn-checkbox-filter/btn-checkbox-filter.component';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { DialogGridComponent } from './dialog-grid/dialog-grid.component';\r\nimport { DialogFormComponent } from './dialog-form/dialog-form.component';\r\nimport { DialogMessageComponent } from './dialog-message/dialog-message.component';\r\nimport { DataTreeComponent } from './data-tree/data-tree.component';\r\nimport { DialogTranslationComponent } from './dialog-translation/dialog-translation.component';\r\nimport { DatagraphComponent } from './data-graph/datagraph.component';\r\n\r\n\r\nregisterLocaleData(localeCa, 'ca');\r\nregisterLocaleData(localeEs, 'es');\r\n\r\n/** Load translation assets */\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, '../assets/i18n/', '.json');\r\n}\r\n\r\n\r\n/** SITMUN plugin core module */\r\n@NgModule({\r\n  imports: [\r\n    RouterModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    //AngularHalModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    AgGridModule,\r\n    // SitmunFrontendCoreModule,\r\n    MaterialModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: (createTranslateLoader),\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n\r\n  ],\r\n  declarations: [\r\n    DataGridComponent,\r\n    DataTreeComponent,\r\n    BtnEditRenderedComponent,\r\n    BtnCheckboxRenderedComponent,\r\n    BtnCheckboxFilterComponent,\r\n    DialogGridComponent,\r\n    DialogFormComponent,\r\n    DialogMessageComponent,\r\n    DialogTranslationComponent,\r\n    DatagraphComponent\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [\r\n  ],\r\n  exports: [\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    //AngularHalModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    DataGridComponent,\r\n    DataTreeComponent,\r\n    DialogGridComponent,\r\n    DialogFormComponent,\r\n    DialogMessageComponent,\r\n    DialogTranslationComponent,\r\n    DatagraphComponent,\r\n    // SitmunFrontendCoreModule\r\n  ]\r\n})\r\nexport class SitmunFrontendGuiModule {\r\n}\r\n","/*\r\n * Public API Surface of sitmun-frontend-gui\r\n */\r\nexport * from './data-grid/data-grid.component';\r\nexport * from './sitmun-frontend-gui.module';\r\nexport * from './btn-edit-rendered/btn-edit-rendered.component';\r\nexport * from './btn-checkbox-rendered/btn-checkbox-rendered.component';\r\nexport * from './btn-checkbox-filter/btn-checkbox-filter.component';\r\nexport * from './dialog-grid/dialog-grid.component';\r\nexport * from './dialog-message/dialog-message.component';\r\nexport * from './data-tree/data-tree.component';\r\nexport * from './dialog-form/dialog-form.component';\r\nexport * from './dialog-translation/dialog-translation.component';\r\nexport * from './data-graph/datagraph.component';\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {MaterialModule as ɵa} from './material-module';"],"names":["observableOf"],"mappings":"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"}
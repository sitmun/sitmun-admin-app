{"version":3,"names":["Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","__spread","arguments","concat","SuppressedError","BtnEditRenderedComponent","prototype","agInit","params","this","refresh","btnClickedHandler","$event","clicked","getParams","ngOnDestroy","type","Component","args","selector","template","BtnCheckboxRenderedComponent","invokeParentMethod","context","componentParent","methodFromParent","node","rowIndex","colDef","headerName","btnCheckedHandler","event","editable","checked","target","firstElementChild","colId","column","api","undoRedoService","isFilling","setDataValue","preventDefault","BtnCheckboxFilterComponent","text","valueGetter","filterParams","suppressFilterButton","isFilterActive","doesFilterPass","_this","toLowerCase","split","every","filterWord","toString","indexOf","getModel","setModel","model","onChange","newValue","parentFilterInstance","instance","onFloatingFilterChanged","onParentModelChanged","parentModel","currentValue","filter","host","class","input","ViewChild","read","ViewContainerRef","DialogMessageComponent","dialogRef","hideCancelButton","ngOnInit","doAccept","close","closeDialog","MatDialogRef","DataGridComponent","dialog","translate","elRef","modules","AllCommunityModules","statusColumn","someColumnIsEditable","changesMap","Map","modificationChange","undoNoChanges","someStatusHasChangedToDelete","currentData","frameworkComponents","btnEditRendererComponent","btnCheckboxRendererComponent","btnCheckboxFilterComponent","components","datePicker","getDatePicker","remove","EventEmitter","new","add","discardChanges","sendChanges","getSelectedRows","duplicate","getAllRows","gridModified","changeCounter","previousChangeCounter","redoCounter","gridOptions","defaultColDef","sortable","flex","nonEditable","suppressMenu","resizable","cellStyle","has","id","get","field","rowSelection","singleClickEdit","localeTextFunc","key","defaultValue","data","instant","eventRefreshSubscription","_eventRefreshSubscription","subscribe","clear","getElements","eventGetSelectedRowsSubscription","_eventGetSelectedRowsSubscription","emitSelectedRows","eventGetAllRowsSubscription","_eventGetAllRowsSubscription","emitAllRows","eventSaveAgGridStateSubscription","_eventSaveAgGridStateSubscription","saveAgGridState","eventModifyStatusOfSelectedCells","_eventModifyStatusOfSelectedCells","status","modifyStatusSelected","eventAddItemsSubscription","items","addItems","firstDataRendered","undefined","localStorage","agGridState","JSON","parse","idAgGrid","gridApi","setFilterModel","filterState","gridColumnApi","setColumnState","colState","setSortModel","sortState","searchValue","valueSearchGeneric","quickSearch","removeAgGridState","onGridReady","singleSelection","columnApi","_b","columnDefs","_c","col","console","log","defaultColumnSorting","Array","isArray","sortModel_1","forEach","element","sort","sortModel","defaultHeight","changeHeight","Datepicker","init","eInput","document","createElement","classList","style","height","$","datepicker","dateFormat","getGui","afterGuiAttached","focus","select","getValue","destroy","isPopup","areRowsSelected","getSelectedNodes","selectedData","map","emit","getAllCurrentData","rowData","forEachNode","newStatus","newStatusRegister","selected","redrawRows","getColumnState","getFilterModel","getSortModel","setItem","stringify","removeItem","getColumnKeysAndHeaders","columnkeys","header","getAllDisplayedColumns","userProvidedColDef","join","exportData","onlySelected","columnKeys","customHeader","skipHeader","exportDataAsCsv","setQuickFilter","getAll","allNewElements","newItems","condition","addFieldRestriction","checkElementAllowedToAdd","setRowData","setSize","allColumnIds","columns","getAllColumns","autoSizeColumns","grid","availableWidth","gridPanel","eBodyViewport","clientWidth","columnController","getWidthOfColsInList","sizeColumnsToFit","itemsToAdd","item","newItem","updateRowData","finalAddition","data_1","data_1_1","canAdd","condition_1","e_3","condition_1_1","currentCondition","fieldRestrictionWithDifferentName","find","pixels","nativeElement","parentElement","removeData","stopEditing","selectedNodes","selectedRows","selectedRows_1","selectedRows_1_1","getRowNode","refreshCells","deselectAll","newData","onAddButtonClicked","onDuplicateButtonClicked","open","componentInstance","title","message","afterClosed","result","applyChanges","itemsChanged","keys","deleteChanges","newElementsActived","undo","discardNonReverseStatus","rowsWithStatusModified_1","onFilterModified","undoCellEditing","redo","redoCellEditing","onCellEditingStopped","onCellValueChanged","oldValue","currentChanges","set","addMap","paintCells","delete","size","row","getDisplayedRowAtIndex","rowNodes","cellRenderer","undoRedoActions","cellValueChanges","pushActionsToUndoStack","modificationWithoutChanges","getColumnIndexByColId","findIndex","getColId","MatDialog","TranslateService","ElementRef","Input","Output","MaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","MatFormFieldModule","DialogGridComponent","Subject","allRowsReceived","orderTable","joinTables","tablesReceivedCounter","addButtonClickedSubscription","_addButtonClickedSubscription","getAllSelectedRows","joinRowsReceived","getAllsTable","doAdd","rowsToAdd","DialogFormComponent","form","valid","FileNode","FileFlatNode","expandable","name","level","FileDatabase","dataChange","BehaviorSubject","defineProperty","initialize","dataObj","buildFileTree","arrayTreeNodes","isFolder","isRoot","order","children","treeNode","obj","parent","previousChildren","deleteItem","changedData","deleteNode","nodes","nodeToDelete","index","splice","setOrder","copyPasteItem","from","to","insertItem","copyPasteItemAbove","insertItemAbove","copyPasteItemBelow","insertItemBelow","getNewItem","active","cartographyId","cartographyName","datasetURL","description","filterGetFeatureInfo","filterGetMap","filterSelectable","metadataURL","queryableActive","radio","tooltip","_links","nodeDrag","parentNode","getParentFromNodes","currentRoot","getParent","child","Injectable","DataTreeComponent","database","expansionModel","SelectionModel","dragging","expandDelay","validateDrop","dragNodeExpandOverWaitTimeMs","flatNodeMap","nestedNodeMap","transformer","existingNode","flatNode","_getLevel","_isExpandable","_getChildren","observableOf","hasChild","_","_nodeData","emitNode","createNode","createFolder","emitAllNodes","treeFlattener","MatTreeFlattener","treeControl","FlatTreeControl","dataSource","MatTreeFlatDataSource","eventNodeUpdatedSubscription","updateNode","eventCreateNodeSubscription","createNewFolder","createNewNode","treeData","rebuildTreeForData","visibleNodes","addExpandedChildren","expanded","findNodeSiblings","arr","subResult","handleDragStart","dataTransfer","setData","setDragImage","emptyItem","dragNode","collapse","handleDragOver","dragNodeExpandOverNode","isExpanded","Date","getTime","dragNodeExpandOverTime","expand","offsetX","percentageY","offsetY","clientHeight","dragNodeExpandOverArea","handleDrop","toFlatNode","fromFlatNode","nodeAct","parentLvl_1","dataNodes","expandDescendants","handleDragEnd","sortByOrder","a","b","getParentNode","currentLevel","currentNode","nodeUpdated","dataToChange","siblings","newFolder","newNode","onButtonClicked","button","nodeClicked","deleteChildren","dataToEmit","allRows","getAllChildren","apply","providers","DialogTranslationComponent","matIconRegistry","domSanitizer","catalanAvailable","spanishAvailable","englishAvailable","araneseAvailable","frenchAvailable","initializeTranslationForm","addSvgIcon","bypassSecurityTrustResourceUrl","checkLanguagesAvailables","checkTranslationsAlreadyDone","languagesAvailables","shortname","languageByDefault","translationsMap","translation","translationForm","patchValue","catalanValue","spanishValue","englishValue","araneseValue","frenchValue","FormGroup","FormControl","MatIconRegistry","DomSanitizer","DatagraphComponent","margin","top","bottom","left","right","margin2","createBarChart","updateBarChart","ngOnChanges","chart","chartContainer","width","offsetWidth","offsetHeight","svg","d3","append","attr","barGroups","selectAll","enter","xDomain","d","yDomain","max","xScale","scaleBand","padding","domain","rangeRound","yScale","scaleLinear","range","bandwidth","xAxis","axisBottom","yAxis","axisLeft","transition","update","exit","delay","createTranslateLoader","http","TranslateHttpLoader","static","registerLocaleData","localeCa","localeEs","SitmunFrontendGuiModule","imports","RouterModule","HttpClientModule","CommonModule","FormsModule","NoopAnimationsModule","ReactiveFormsModule","BrowserAnimationsModule","AgGridModule","TranslateModule","forRoot","loader","provide","TranslateLoader","useFactory","deps","HttpClient","declarations","entryComponents"],"sources":["../../../node_modules/tslib/tslib.es6.mjs","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-edit-rendered/btn-edit-rendered.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-checkbox-rendered/btn-checkbox-rendered.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-checkbox-filter/btn-checkbox-filter.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-message/dialog-message.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-grid/data-grid.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/material-module.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-grid/dialog-grid.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-form/dialog-form.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-tree/data-tree.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-translation/dialog-translation.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-graph/datagraph.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/sitmun-frontend-gui.module.ts"],"sourcesContent":["/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-btn-edit-rendered',\r\n  templateUrl: './btn-edit-rendered.component.html',\r\n  styleUrls: ['./btn-edit-rendered.component.scss']\r\n})\r\nexport class BtnEditRenderedComponent implements ICellRendererAngularComp, OnDestroy {\r\n\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  btnClickedHandler($event) {\r\n    this.params.clicked(this.params.value);\r\n  }\r\n\r\n  getParams(){\r\n    return this.params;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // no need to remove the button click handler \r\n  }\r\n\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-btn-checkbox-rendered',\r\n  templateUrl: './btn-checkbox-rendered.component.html',\r\n  styleUrls: ['./btn-checkbox-rendered.component.scss']\r\n})\r\nexport class BtnCheckboxRenderedComponent implements ICellRendererAngularComp, OnDestroy {\r\n\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params: any): boolean {\r\n    this.params = params;\r\n    \r\n    return true;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n    this.params.context.componentParent.methodFromParent(\r\n      `Row: ${this.params.node.rowIndex}, Col: ${this.params.colDef.headerName}`\r\n    );\r\n  }\r\n\r\n  btnCheckedHandler(event) {\r\n    if(this.params.colDef.editable){\r\n      let checked = !event.target.firstElementChild.checked;\r\n      let colId = this.params.column.colId;\r\n      this.params.value=checked;\r\n      this.params.api.undoRedoService.isFilling=true;\r\n      this.params.node.setDataValue(colId, checked);\r\n    }\r\n    else{\r\n      event.preventDefault();\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  getParams(){\r\n    return this.params;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // no need to remove the button click handler \r\n  }\r\n\r\n}\r\n","import { Component, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {\r\n  IAfterGuiAttachedParams,\r\n  IDoesFilterPassParams,\r\n  IFilterParams,\r\n  RowNode,\r\n  IFloatingFilter,\r\n  NumberFilter,\r\n  NumberFilterModel,\r\n  IFloatingFilterParams,\r\n} from '@ag-grid-community/all-modules';\r\nimport { AgFrameworkComponent } from '@ag-grid-community/angular';\r\nimport { IFilterAngularComp } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n  selector: 'app-btn-checkbox-filter',\r\n  templateUrl: './btn-checkbox-filter.component.html',\r\n  styleUrls: ['./btn-checkbox-filter.component.scss'],\r\n  host: {'class': 'hostClass'}\r\n})\r\nexport class BtnCheckboxFilterComponent implements IFloatingFilter, AgFrameworkComponent<IFloatingFilterParams>   {\r\n  private params: IFloatingFilterParams;\r\n  private valueGetter: (rowNode: RowNode) => any;\r\n  public text: string = '';\r\n  public currentValue: number;\r\n  @ViewChild('input', { read: ViewContainerRef }) public input;\r\n\r\n  agInit(params: IFloatingFilterParams): void {\r\n    this.params = params;\r\n    this.valueGetter = params.filterParams.valueGetter;\r\n    this.params.suppressFilterButton=true;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.text != null && this.text !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    return this.text\r\n      .toLowerCase()\r\n      .split(' ')\r\n      .every(\r\n        (filterWord) =>\r\n          this.valueGetter(params.node)\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(filterWord) >= 0\r\n      );\r\n  }\r\n\r\n  getModel(): any {\r\n    return { value: this.text };\r\n  }\r\n\r\n  setModel(model: any): void {\r\n    this.text = model ? model.value : '';\r\n  }\r\n\r\n\r\n onChange(newValue): void {\r\n    this.params.parentFilterInstance(function (instance) {\r\n      (<NumberFilter>instance).onFloatingFilterChanged(\r\n        'contains',\r\n        newValue\r\n      );\r\n    });\r\n  }\r\n\r\n  onParentModelChanged(parentModel: any): void {\r\n    if (!parentModel) {\r\n      this.currentValue = 0;\r\n    } else {\r\n      // note that the filter could be anything here, but our purposes we're assuming a greater than filter only,\r\n      // so just read off the value and use that\r\n      this.currentValue = parentModel.filter;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-dialog-message',\r\n  templateUrl: './dialog-message.component.html',\r\n  styleUrls: ['./dialog-message.component.scss']\r\n})\r\nexport class DialogMessageComponent implements OnInit {\r\n\r\n  title: string;\r\n  message: string;\r\n  hideCancelButton : boolean=false;\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogMessageComponent>){ }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  doAccept(){\r\n    this.dialogRef.close({event:'Accept'});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { Component, OnInit, NgModule, Input, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AllCommunityModules, ColumnApi, Module } from '@ag-grid-community/all-modules';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BtnEditRenderedComponent } from '../btn-edit-rendered/btn-edit-rendered.component';\r\nimport { BtnCheckboxRenderedComponent } from '../btn-checkbox-rendered/btn-checkbox-rendered.component';\r\nimport { BtnCheckboxFilterComponent } from '../btn-checkbox-filter/btn-checkbox-filter.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogMessageComponent } from '../dialog-message/dialog-message.component';\r\nimport { forEach } from 'jszip';\r\ndeclare let $: any;\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-data-grid',\r\n  templateUrl: './data-grid.component.html',\r\n  styleUrls: ['./data-grid.component.scss']\r\n})\r\nexport class DataGridComponent implements OnInit {\r\n\r\n  _eventRefreshSubscription: any;\r\n  _eventGetSelectedRowsSubscription: any;\r\n  _eventGetAllRowsSubscription: any;\r\n  _eventSaveAgGridStateSubscription: any;\r\n  _eventModifyStatusOfSelectedCells: any;\r\n  modules: Module[] = AllCommunityModules;\r\n\r\n\r\n  UndeRedoActions\r\n  searchValue: string;\r\n  gridApi: any;\r\n  gridColumnApi: any;\r\n  statusColumn = false;\r\n  someColumnIsEditable = false;\r\n  changesMap: Map<number, Map<string, number>> = new Map<number, Map<string, number>>();\r\n  // We will save the id of edited cells and the number of editions done.\r\n  params: any; // Last parameters of the grid (in case we do apply changes we will need it) \r\n  rowData: any[];\r\n  changeCounter: number; // Number of editions done above any cell \r\n  previousChangeCounter: number; // Number of ditions done after the last modification(changeCounter)\r\n  redoCounter: number; // Number of redo we can do\r\n  modificationChange = false;\r\n  undoNoChanges = false; // Boolean that indicates if an undo hasn't modifications\r\n  gridOptions;\r\n  someStatusHasChangedToDelete = false;\r\n\r\n\r\n  @Input() eventRefreshSubscription: Observable<boolean>;\r\n  @Input() eventGetSelectedRowsSubscription: Observable<boolean>;\r\n  @Input() eventGetAllRowsSubscription: Observable<string>;\r\n  @Input() eventSaveAgGridStateSubscription: Observable<boolean>;\r\n  @Input() eventModifyStatusOfSelectedCells: Observable<string>;\r\n  @Input() eventAddItemsSubscription: Observable<boolean>;\r\n  @Input() frameworkComponents: any;\r\n  @Input() components: any;\r\n  @Input() columnDefs: any[];\r\n  @Input() getAll: () => Observable<any>;\r\n  @Input() discardChangesButton: boolean;\r\n  @Input() discardNonReverseStatus: boolean;\r\n  @Input() id: any;\r\n  @Input() undoButton: boolean;\r\n  @Input() defaultColumnSorting: string;\r\n  @Input() redoButton: boolean;\r\n  @Input() applyChangesButton: boolean;\r\n  @Input() deleteButton: boolean;\r\n  @Input() newButton: boolean;\r\n  @Input() actionButton: boolean;\r\n  @Input() addButton: boolean;\r\n  @Input() registerButton: boolean;\r\n  @Input() newStatusRegister: string;\r\n  @Input() globalSearch: boolean;\r\n  @Input() changeHeightButton: boolean;\r\n  @Input() defaultHeight: any;\r\n  @Input() themeGrid: any;\r\n  @Input() singleSelection: boolean;\r\n  @Input() nonEditable: boolean;\r\n  @Input() title: string;\r\n  @Input() hideExportButton: boolean;\r\n  @Input() hideDuplicateButton: boolean;\r\n  @Input() hideSearchReplaceButton: boolean;\r\n  @Input() addFieldRestriction: any;\r\n  @Input() allNewElements: any;\r\n  @Input() currentData: Array<any> = null;\r\n  @Input() fieldRestrictionWithDifferentName: string;\r\n\r\n\r\n  @Output() remove: EventEmitter<any[]>;\r\n  @Output() new: EventEmitter<number>;\r\n  @Output() add: EventEmitter<any[]>;\r\n  @Output() discardChanges: EventEmitter<any[]>;\r\n  @Output() sendChanges: EventEmitter<any[]>;\r\n  @Output() duplicate: EventEmitter<any[]>;\r\n  @Output() getSelectedRows: EventEmitter<any[]>;\r\n  @Output() getAllRows: EventEmitter<{data: any[], event:string}>;\r\n  @Output() getAgGridState: EventEmitter<any[]>;\r\n  @Output() gridModified: EventEmitter<boolean>;\r\n\r\n\r\n  constructor(public dialog: MatDialog,\r\n    public translate: TranslateService,\r\n    private elRef: ElementRef) {\r\n    this.translate = translate;\r\n\r\n    this.frameworkComponents = {\r\n      btnEditRendererComponent: BtnEditRenderedComponent,\r\n      btnCheckboxRendererComponent: BtnCheckboxRenderedComponent,\r\n      btnCheckboxFilterComponent: BtnCheckboxFilterComponent\r\n    };\r\n\r\n    this.components = {\r\n      datePicker: this.getDatePicker()\r\n    };\r\n\r\n\r\n    this.remove = new EventEmitter();\r\n    this.new = new EventEmitter();\r\n    this.add = new EventEmitter();\r\n    this.discardChanges= new EventEmitter();\r\n    this.sendChanges = new EventEmitter();\r\n    this.getSelectedRows = new EventEmitter();\r\n    this.duplicate = new EventEmitter();\r\n    this.getAllRows = new EventEmitter();\r\n    this.gridModified = new EventEmitter();\r\n    this.changeCounter = 0;\r\n    this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.gridOptions = {\r\n      defaultColDef: {\r\n        sortable: true,\r\n        flex: 1,\r\n        filter: true,\r\n        editable: !this.nonEditable,\r\n        suppressMenu: true,\r\n        resizable: true,\r\n        cellStyle: (params) => {\r\n          if(params.value && params.colDef.editable){\r\n            if(this.changesMap.has(params.node.id) && this.changesMap.get(params.node.id).has(params.colDef.field)){\r\n              return {'background-color': '#E8F1DE'};\r\n            }\r\n            else{\r\n              return {'background-color': 'white'};\r\n            }\r\n          }\r\n          else {\r\n            return {'background-color': 'white'};\r\n          }\r\n        } ,\r\n      },\r\n      rowSelection: 'multiple',\r\n      singleClickEdit: true,\r\n      // suppressHorizontalScroll: true,\r\n      localeTextFunc: (key: string, defaultValue: string) => {\r\n        const data = this.translate.instant(key);\r\n        return data === key ? defaultValue : data;\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.eventRefreshSubscription) {\r\n      this._eventRefreshSubscription = this.eventRefreshSubscription.subscribe(() => {\r\n        this.changesMap.clear();\r\n        this.someStatusHasChangedToDelete=false;\r\n        this.changeCounter = 0;\r\n        this.previousChangeCounter = 0;\r\n        this.redoCounter = 0;\r\n        this.getElements();\r\n      });\r\n    }\r\n    if (this.eventGetSelectedRowsSubscription) {\r\n      this._eventGetSelectedRowsSubscription = this.eventGetSelectedRowsSubscription.subscribe(() => {\r\n        this.emitSelectedRows();\r\n      });\r\n    }\r\n    if (this.eventGetAllRowsSubscription) {\r\n      this._eventGetAllRowsSubscription = this.eventGetAllRowsSubscription.subscribe((event: string) => {\r\n        this.emitAllRows(event);\r\n      });\r\n    }\r\n\r\n    if (this.eventSaveAgGridStateSubscription) {\r\n      this._eventSaveAgGridStateSubscription = this.eventSaveAgGridStateSubscription.subscribe(() => {\r\n        this.saveAgGridState();\r\n      });\r\n    }\r\n\r\n    if (this.eventModifyStatusOfSelectedCells) {\r\n      this._eventModifyStatusOfSelectedCells = this.eventModifyStatusOfSelectedCells.subscribe((status: string) => {\r\n        this.modifyStatusSelected(status);\r\n      });\r\n    }\r\n\r\n    if (this.eventAddItemsSubscription) {\r\n      this.eventAddItemsSubscription.subscribe(\r\n        (items: any) => {\r\n          this.addItems(items);\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  firstDataRendered(): void {\r\n    if (localStorage.agGridState != undefined) {\r\n      let agGridState = JSON.parse(localStorage.agGridState)\r\n      if (agGridState.idAgGrid != undefined && agGridState.idAgGrid == this.id) {\r\n        this.gridApi.setFilterModel(agGridState.filterState);\r\n        this.gridColumnApi.setColumnState(agGridState.colState);\r\n        this.gridApi.setSortModel(agGridState.sortState);\r\n        this.searchValue = agGridState.valueSearchGeneric;\r\n        this.quickSearch();\r\n        this.removeAgGridState();\r\n      } else if (this.id != undefined) {\r\n        this.removeAgGridState();\r\n      }\r\n    }\r\n  }\r\n\r\n  onGridReady(params): void {\r\n    if (this.singleSelection) { this.gridOptions.rowSelection = 'single' }\r\n    // if (this.nonEditable) {this.gridOptions.defaultColDef.editable = false}\r\n    this.params = params;\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    for (const col of this.columnDefs) {\r\n      if(!this.someColumnIsEditable && col.editable) { this.someColumnIsEditable = true}\r\n      if (col.field === 'status') {\r\n        this.statusColumn = true;\r\n      }\r\n    }\r\n    this.getElements();\r\n    console.log(this.columnDefs);\r\n    if (this.defaultColumnSorting) {\r\n      if(!Array.isArray(this.defaultColumnSorting))\r\n      {\r\n        const sortModel = [\r\n          { colId: this.defaultColumnSorting, sort: 'asc' }\r\n        ];\r\n        this.gridApi.setSortModel(sortModel);\r\n      }\r\n      else{\r\n        let sortModel = [];\r\n        this.defaultColumnSorting.forEach(element => {\r\n          sortModel.push({ colId: element, sort: 'asc' })\r\n        });\r\n        this.gridApi.setSortModel(sortModel);\r\n      }\r\n\r\n    }\r\n    if(this.defaultHeight != null && this.defaultHeight != undefined){\r\n      this.changeHeight(this.defaultHeight)\r\n    }\r\n  }\r\n\r\n\r\n  getDatePicker() {\r\n    function Datepicker() {}\r\n    Datepicker.prototype.init = function (params) {\r\n      this.eInput = document.createElement('input');\r\n      this.eInput.value = params.value;\r\n      this.eInput.classList.add('ag-input');\r\n      this.eInput.style.height = '100%';\r\n      $(this.eInput).datepicker({ dateFormat: 'mm/dd/yy' });\r\n    };\r\n    Datepicker.prototype.getGui = function () {\r\n      return this.eInput;\r\n    };\r\n    Datepicker.prototype.afterGuiAttached = function () {\r\n      this.eInput.focus();\r\n      this.eInput.select();\r\n    };\r\n    Datepicker.prototype.getValue = function () {\r\n      return this.eInput.value;\r\n    };\r\n    Datepicker.prototype.destroy = function () {};\r\n    Datepicker.prototype.isPopup = function () {\r\n      return false;\r\n    };\r\n    return Datepicker;\r\n  }\r\n\r\n  areRowsSelected(): Boolean {\r\n    return (this.gridApi != null && this.gridApi.getSelectedNodes().length > 0)? true: false;\r\n    // if (this.gridApi != null && this.gridApi.getSelectedNodes().length > 0) {\r\n    //   return true\r\n    // } else {\r\n    //   return false\r\n    // }\r\n  }\r\n\r\n\r\n  emitSelectedRows(): void {\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.getSelectedRows.emit(selectedData);\r\n  }\r\n\r\n  emitAllRows(event: string): void {\r\n    // let rowData = [];\r\n    // this.gridApi.forEachNode(node => rowData.push(node.data));\r\n    this.getAllRows.emit({data: this.getAllCurrentData(), event: event});\r\n  }\r\n\r\n  private getAllCurrentData(): Array<any>{\r\n    let rowData = [];\r\n    this.gridApi.forEachNode(node => rowData.push(node.data));\r\n    return rowData;\r\n  }\r\n\r\n  modifyStatusSelected(status?: string): void{\r\n    let newStatus=status?status:this.newStatusRegister;\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    selectedNodes.map(node => {\r\n      node.data.status=newStatus;\r\n      node.selected=false;\r\n    } );\r\n    this.gridApi.redrawRows();\r\n  }\r\n\r\n  saveAgGridState(): void {\r\n    let agGridState = {\r\n      idAgGrid: this.id,\r\n      colState: this.gridColumnApi.getColumnState(),\r\n      filterState: this.gridApi.getFilterModel(),\r\n      sortState: this.gridApi.getSortModel(),\r\n      valueSearchGeneric: this.searchValue\r\n    };\r\n\r\n    localStorage.setItem(\"agGridState\", JSON.stringify(agGridState));\r\n\r\n  }\r\n  removeAgGridState(): void {\r\n    localStorage.removeItem(\"agGridState\")\r\n  }\r\n\r\n  getColumnKeysAndHeaders(columnkeys: Array<any>): String {\r\n    let header: Array<any> = [];\r\n    if (this.columnDefs.length == 0) { return '' };\r\n\r\n    let allColumnKeys = this.gridOptions.columnApi.getAllDisplayedColumns();\r\n    // console.log(allColumnKeys);\r\n    allColumnKeys.forEach(element => {\r\n      if (element.userProvidedColDef.headerName !== '') {\r\n        columnkeys.push(element.userProvidedColDef.field);\r\n        header.push(element.userProvidedColDef.headerName);\r\n      }\r\n\r\n\r\n    });\r\n\r\n    return header.join(\",\");\r\n  }\r\n\r\n\r\n  exportData(): void {\r\n    let columnkeys: Array<any> = [];\r\n    let customHeader: String = '';\r\n    customHeader = this.getColumnKeysAndHeaders(columnkeys)\r\n    let params = {\r\n      onlySelected: true,\r\n      columnKeys: columnkeys,\r\n      customHeader: customHeader,\r\n      skipHeader: true\r\n    };\r\n    this.gridApi.exportDataAsCsv(params);\r\n  }\r\n\r\n  quickSearch(): void {\r\n    this.gridApi.setQuickFilter(this.searchValue);\r\n  }\r\n\r\n  getElements(): void {\r\n    this.getAll()\r\n      .subscribe((items) => {\r\n        let status = this.allNewElements?'pendingCreation':'statusOK'\r\n        let newItems = [];\r\n        let condition = (this.addFieldRestriction)? this.addFieldRestriction: 'id';\r\n        items.forEach(element => {\r\n          if(this.statusColumn){\r\n            if(element.status != \"notAvailable\" && element.status != \"pendingCreation\" && element.status != \"pendingRegistration\" && element.status != \"unregisteredLayer\"){\r\n              element.status=status\r\n            }\r\n            if(this.allNewElements) { element.new = true; }\r\n          }\r\n          if(this.currentData){\r\n            if (this.checkElementAllowedToAdd(condition,element, this.currentData)) {\r\n                newItems.push(element);\r\n            }\r\n          }\r\n          \r\n        });\r\n\r\n        // if(this.statusColumn){\r\n        //   let status = this.allNewElements?'pendingCreation':'statusOK'\r\n        //   items.forEach(element => {\r\n        //     if(element.status != \"notAvailable\" && element.status != \"pendingCreation\" && element.status != \"pendingRegistration\" && element.status != \"unregisteredLayer\"){\r\n        //       element.status=status\r\n        //     }\r\n        //     if(this.allNewElements) { element.new = true; }\r\n        //   });\r\n        // }\r\n        this.rowData = this.currentData?newItems: items;\r\n        this.gridApi.setRowData(this.rowData);\r\n        this.setSize()\r\n        // this.gridApi.sizeColumnsToFit()\r\n        console.log(this.rowData);\r\n\r\n      });\r\n  }\r\n\r\n  setSize() {\r\n\r\n    var allColumnIds = [];\r\n    let columns = this.gridOptions.columnApi.getAllColumns();\r\n    columns.forEach(function (column) {\r\n      allColumnIds.push(column.colId);\r\n    });\r\n\r\n    this.gridOptions.columnApi.autoSizeColumns(allColumnIds);\r\n\r\n    let grid = this.gridOptions.api\r\n    let availableWidth = grid.gridPanel.eBodyViewport.clientWidth;\r\n\r\n    let usedWidth = grid.gridPanel.columnController.getWidthOfColsInList(columns);\r\n\r\n    if (usedWidth < availableWidth) {\r\n      grid.sizeColumnsToFit();\r\n    }\r\n\r\n  }\r\n\r\n  addItems(newItems: any[]): void {\r\n    console.log(newItems);\r\n    let itemsToAdd: Array<any> = [];\r\n    let condition = (this.addFieldRestriction)? this.addFieldRestriction: 'id';\r\n    \r\n\r\n    newItems.forEach(item => {\r\n\r\n      if (this.checkElementAllowedToAdd(condition,item, this.rowData)) {\r\n        if (this.statusColumn) {\r\n          item.status = 'pendingCreation'\r\n          item.newItem = true;\r\n        }\r\n        itemsToAdd.push(item);\r\n        this.rowData.push(item);\r\n      }\r\n      else {\r\n        console.log(`Item already exists`)\r\n      }\r\n    });\r\n    this.gridApi.updateRowData({ add: itemsToAdd });\r\n\r\n    console.log(this.columnDefs);\r\n    // params.oldValue!=undefined\r\n  }\r\n\r\n  private checkElementAllowedToAdd(condition, item, data){\r\n\r\n    let finalAddition = true;\r\n\r\n    if(Array.isArray(condition)){\r\n\r\n      for(let element of data){\r\n        let canAdd = false;\r\n\r\n        for(let currentCondition of condition){\r\n          if(element[currentCondition] != item[currentCondition]){\r\n            canAdd = true;\r\n            break;\r\n          }\r\n        }\r\n        if(!canAdd) {\r\n           finalAddition = false;\r\n           break;\r\n          }\r\n      }\r\n      return finalAddition;\r\n\r\n    }\r\n    else{\r\n      if(this.fieldRestrictionWithDifferentName){\r\n        return (item[condition] == undefined || (data.find(element => element[this.fieldRestrictionWithDifferentName] == item[condition])) == undefined)\r\n      }\r\n      return (item[condition] == undefined || (data.find(element => element[condition] == item[condition])) == undefined)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  changeHeight(value) {\r\n    let pixels = \"\";\r\n    if (value === '5') {\r\n      pixels = \"200px\"\r\n    } else if (value === '10') {\r\n      pixels = \"315px\"\r\n    } else if (value === '20') {\r\n      pixels = \"630px\"\r\n    } else {\r\n      pixels = \"1550px\"\r\n    }\r\n    this.elRef.nativeElement.parentElement.style.height = pixels;\r\n  }\r\n\r\n  removeData(): void {\r\n    this.gridApi.stopEditing(false);\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.remove.emit(selectedData);\r\n\r\n    if (this.statusColumn) {\r\n      const selectedRows = selectedNodes.map(node => node.id);\r\n      if(selectedRows.length>0) {this.someStatusHasChangedToDelete=true;}\r\n      for (const id of selectedRows) {\r\n        this.gridApi.getRowNode(id).data.status = 'pendingDelete';\r\n      }\r\n      this.gridOptions.api.refreshCells();\r\n    }\r\n    this.gridOptions.api.deselectAll();\r\n  }\r\n\r\n  newData(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.new.emit(-1);\r\n  }\r\n\r\n  onAddButtonClicked(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.add.emit(this.getAllCurrentData());\r\n  }\r\n\r\n  onDuplicateButtonClicked(): void {\r\n    this.gridApi.stopEditing(false);\r\n    if (this.changeCounter > 0) {\r\n      const dialogRef = this.dialog.open(DialogMessageComponent);\r\n      dialogRef.componentInstance.title = this.translate.instant('caution')\r\n      dialogRef.componentInstance.message = this.translate.instant('duplicateMessage')\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (result) {\r\n          if (result.event === 'Accept') {\r\n            const selectedNodes = this.gridApi.getSelectedNodes();\r\n            const selectedData = selectedNodes.map(node => node.data);\r\n            this.duplicate.emit(selectedData);\r\n          }\r\n        }\r\n      });\r\n\r\n    }\r\n    else {\r\n      const selectedNodes = this.gridApi.getSelectedNodes();\r\n      const selectedData = selectedNodes.map(node => node.data);\r\n      this.duplicate.emit(selectedData);\r\n      this.gridOptions.api.deselectAll();\r\n\r\n    }\r\n  }\r\n\r\n\r\n  applyChanges(): void {\r\n    const itemsChanged: any[] = [];\r\n    this.gridApi.stopEditing(false);\r\n    for (const key of this.changesMap.keys()) {\r\n      itemsChanged.push(this.gridApi.getRowNode(key).data);\r\n    }\r\n    this.sendChanges.emit(itemsChanged);\r\n    this.gridModified.emit(false);\r\n    this.changesMap.clear();\r\n    this.changeCounter = 0;\r\n    this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.someStatusHasChangedToDelete=false;\r\n    // this.params.colDef.cellStyle = { backgroundColor: '#FFFFFF' };\r\n    this.gridApi.redrawRows();\r\n  }\r\n\r\n\r\n\r\n  deleteChanges(): void {\r\n    this.gridApi.stopEditing(false);\r\n    let newElementsActived= this.allNewElements;\r\n\r\n    while (this.changeCounter > 0) {\r\n      this.undo();\r\n    }\r\n\r\n    this.changesMap.clear();\r\n    //this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n\r\n    if(this.statusColumn && !this.discardNonReverseStatus)\r\n    {\r\n      let rowsWithStatusModified = [];\r\n      this.gridApi.forEachNode(function(node) { \r\n        if(node.data.status === 'pendingModify' || node.data.status === 'pendingDelete') {\r\n          if(node.data.status === 'pendingDelete'){\r\n            rowsWithStatusModified.push(node.data);\r\n          }\r\n          if(node.data.newItem || newElementsActived){\r\n            node.data.status='pendingCreation'\r\n          }\r\n          else{\r\n            node.data.status='statusOK'\r\n          }\r\n        }\r\n        \r\n    });\r\n    this.someStatusHasChangedToDelete=false;\r\n    this.discardChanges.emit(rowsWithStatusModified);\r\n    this.gridModified.emit(false);\r\n  }\r\n  this.gridApi.redrawRows();\r\n\r\n    //this.params.colDef.cellStyle =  {backgroundColor: '#FFFFFF'};\r\n    //this.gridApi.redrawRows();\r\n  }\r\n\r\n\r\n  onFilterModified(): void {\r\n\r\n    this.deleteChanges();\r\n\r\n  }\r\n\r\n\r\n  undo(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.gridApi.undoCellEditing();\r\n    this.changeCounter -= 1;\r\n    if(this.changeCounter == 0) { this.gridModified.emit(false)}\r\n    this.redoCounter += 1;\r\n  }\r\n\r\n  redo(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.gridApi.redoCellEditing();\r\n    this.changeCounter += 1;\r\n    this.redoCounter -= 1;\r\n  }\r\n\r\n\r\n  onCellEditingStopped(e) {\r\n    if (this.modificationChange) {\r\n      this.changeCounter++;\r\n      if(this.changeCounter == 1) { this.gridModified.emit(true)}\r\n      this.redoCounter = 0;\r\n      this.onCellValueChanged(e);\r\n      this.modificationChange = false;\r\n    }\r\n  }\r\n\r\n\r\n  onCellValueChanged(params): void {\r\n    this.params = params;\r\n    if (this.changeCounter > this.previousChangeCounter)\r\n    // True if we have edited some cell or we have done a redo \r\n    {\r\n\r\n      if (params.oldValue !== params.value && !(params.oldValue == null && params.value === '')) {\r\n\r\n        if (!this.changesMap.has(params.node.id)) // If it's firts edit of a cell, we add it to the map and we paint it\r\n        {\r\n          const addMap: Map<string, number> = new Map<string, number>();\r\n          addMap.set(params.colDef.field, 1)\r\n          this.changesMap.set(params.node.id, addMap);\r\n          if (this.statusColumn) {\r\n            // if (this.gridApi.getRowNode(params.node.id).data.status !== 'pendingCreation') {\r\n              this.gridApi.getRowNode(params.node.id).data.status = 'pendingModify'\r\n            // }\r\n          }\r\n        }\r\n        else {\r\n          if (!this.changesMap.get(params.node.id).has(params.colDef.field)) {\r\n\r\n            this.changesMap.get(params.node.id).set(params.colDef.field, 1);\r\n          }\r\n\r\n          else {\r\n            // We already had edited this cell, so we only increment number of changes of it on the map \r\n            const currentChanges = this.changesMap.get(params.node.id).get(params.colDef.field);\r\n            this.changesMap.get(params.node.id).set(params.colDef.field, (currentChanges + 1));\r\n          }\r\n\r\n        }\r\n        this.paintCells(params, this.changesMap); //We paint the row of the edited cell \r\n        this.previousChangeCounter++; //We match the current previousChangeCounter with changeCounter\r\n      }\r\n\r\n    }\r\n    else if (this.changeCounter < this.previousChangeCounter) { // True if we have done an undo\r\n      let currentChanges = -1;\r\n      if (this.changesMap.has(params.node.id)) { currentChanges = this.changesMap.get(params.node.id).get(params.colDef.field); }\r\n\r\n      if (currentChanges === 1) { //Once the undo it's done, cell is in his initial status\r\n\r\n        this.changesMap.get(params.node.id).delete(params.colDef.field);\r\n        if (this.changesMap.get(params.node.id).size === 0) { // No more modifications in this row\r\n          this.changesMap.delete(params.node.id);\r\n          const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\r\n          if (this.statusColumn) {\r\n            if (this.gridApi.getRowNode(params.node.id).data.status !== 'pendingCreation') {\r\n              this.gridApi.getRowNode(params.node.id).data.status ='statusOK'\r\n            }\r\n          };\r\n          // We paint it white\r\n          this.gridApi.redrawRows({ rowNodes: [row] });\r\n\r\n        }\r\n        else {\r\n          this.paintCells(params, this.changesMap);\r\n        }\r\n\r\n      }\r\n      else if (currentChanges > 1) // The cell isn't in his initial state yet\r\n      {                                 //We can't do else because we can be doing an undo without changes \r\n        this.changesMap.get(params.node.id).set(params.colDef.field, (currentChanges - 1));\r\n\r\n        this.paintCells(params, this.changesMap);//Not initial state -> green background\r\n\r\n      }\r\n      this.previousChangeCounter--;  //We decrement previousChangeCounter because we have done undo\r\n    }\r\n    else { // Control of modifications without changes\r\n      if (!(params.oldValue == null && params.value === '')) {\r\n        let newValue: string;\r\n        if (params.value == null) { newValue = '' }\r\n        else { newValue = params.value.toString() }\r\n\r\n        if ((params.oldValue != undefined && params.oldValue != null && params.oldValue.toString() !== newValue.toString())\r\n          || ((params.oldValue == undefined || params.oldValue == null) && newValue != null)) {\r\n\r\n          this.modificationChange = true;\r\n          if (params.colDef.cellRenderer == \"btnCheckboxRendererComponent\") {\r\n            var undoRedoActions = {\r\n              cellValueChanges: this.gridApi.undoRedoService.cellValueChanges\r\n            };\r\n            this.gridApi.undoRedoService.pushActionsToUndoStack(undoRedoActions);\r\n            this.gridApi.undoRedoService.isFilling = false;\r\n            this.onCellEditingStopped(params);\r\n          }\r\n        }\r\n        else { this.modificationWithoutChanges(params) }\r\n\r\n      }\r\n      else { this.modificationWithoutChanges(params) }\r\n    }\r\n  }\r\n\r\n  modificationWithoutChanges(params: any) {\r\n\r\n    if (this.changesMap.has(params.node.id)) //Modification without changes in en edited cell\r\n    {\r\n      if (!this.undoNoChanges) {\r\n        this.gridApi.undoCellEditing(); // Undo to delete the change without changes internally \r\n        this.undoNoChanges = true;\r\n        this.paintCells(params, this.changesMap);  //The cell has modifications yet -> green background \r\n      }\r\n      else { this.undoNoChanges = false; }\r\n\r\n\r\n    }\r\n    else {\r\n      //With the internally undo will enter at this function, so we have to control when done the undo or not \r\n      if (!this.undoNoChanges) {\r\n        this.gridApi.undoCellEditing(); // Undo to delete the change internally\r\n        this.undoNoChanges = true;\r\n      }\r\n      else { this.undoNoChanges = false; }\r\n    }\r\n\r\n  }\r\n\r\n  getColumnIndexByColId(api: ColumnApi, colId: string): number {\r\n    return api.getAllColumns().findIndex(col => col.getColId() === colId);\r\n  }\r\n  paintCells(params: any, changesMap: Map<number, Map<string, number>>,) {\r\n    const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\r\n\r\n    // this.changeCellStyleColumns(params, changesMap, '#E8F1DE');\r\n    this.gridApi.redrawRows({ rowNodes: [row] });\r\n    // this.changeCellStyleColumns(params, changesMap, '#FFFFFF');\r\n    // We will define cellStyle white to future modifications (like filter)\r\n  }\r\n\r\n  // changeCellStyleColumns(params: any, changesMap: Map<number, Map<string, number>>, color: string) {\r\n\r\n  //   for (const key of changesMap.get(params.node.id).keys()) {\r\n  //     const columnNumber = this.getColumnIndexByColId(this.gridColumnApi, key);\r\n  //     this.gridColumnApi.columnController.gridColumns[columnNumber].colDef.cellStyle = { backgroundColor: color };\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MatFormFieldModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  _GetAllsTable:  Array<() => Observable<any>>;\r\n  _columnDefsTable: Array<any[]>;\r\n  _singleSelectionTable: Array<boolean>;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-grid',\r\n  templateUrl: './dialog-grid.component.html',\r\n  styleUrls: ['./dialog-grid.component.scss']\r\n})\r\nexport class DialogGridComponent implements OnInit {\r\n\r\n  title: string;\r\n  getAllRows: Subject<boolean> = new Subject <boolean>();\r\n  private _addButtonClickedSubscription: any;\r\n  tablesReceivedCounter: number;\r\n  allRowsReceived: Array<any[]> = [];\r\n  changeHeightButton : boolean;\r\n  heightByDefault : any;\r\n\r\n  //Inputs\r\n  themeGrid: any;\r\n  getAllsTable: Array<() => Observable<any>>;\r\n  columnDefsTable: Array<any[]>;\r\n  singleSelectionTable: Array<boolean>;\r\n  titlesTable: Array<string>;\r\n  orderTable: Array<string> = [];\r\n  addButtonClickedSubscription: Observable <boolean> ;\r\n  nonEditable: boolean;\r\n  addFieldRestriction: Array<any> = [];\r\n  fieldRestrictionWithDifferentName: Array<any> = [];\r\n  currentData: Array<any> = [];\r\n\r\n  //Outputs\r\n  @Output() joinTables : EventEmitter<Array<any[]>>;\r\n\r\n  \r\n\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogGridComponent>) {\r\n    \r\n    this.joinTables = new EventEmitter();\r\n    // this.nonEditable = true;\r\n    this.tablesReceivedCounter = 0;\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.addButtonClickedSubscription) {\r\n      this._addButtonClickedSubscription = this.addButtonClickedSubscription.subscribe(() => {\r\n        this.getAllSelectedRows();\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  getAllSelectedRows() {\r\n    this.getAllRows.next(true);\r\n  }\r\n\r\n  joinRowsReceived(data: any[])\r\n  {\r\n      this.allRowsReceived.push(data);\r\n      this.tablesReceivedCounter++;\r\n      if(this.tablesReceivedCounter === this.getAllsTable.length)\r\n      {\r\n        this.doAdd(this.allRowsReceived);\r\n        console.log(this.allRowsReceived);\r\n      }\r\n  }\r\n\r\n  doAdd(rowsToAdd){\r\n    this.dialogRef.close({event:'Add',data: rowsToAdd});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { Component, ElementRef, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormGroup,FormControl,Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog'; \r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DialogMessageComponent } from '../dialog-message/dialog-message.component';\r\n\r\n@Component({\r\n  selector: 'app-dialog-form',\r\n  templateUrl: './dialog-form.component.html',\r\n  styleUrls: ['./dialog-form.component.scss']\r\n})\r\nexport class DialogFormComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  title: string;\r\n  HTMLReceived;\r\n  constructor(\r\n    private dialogRef: MatDialogRef<DialogFormComponent>,\r\n    public dialog: MatDialog,\r\n    private translate: TranslateService) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  doAdd(){\r\n    if(this.form.valid) { this.dialogRef.close({event:'Add'}); }\r\n    else {\r\n       const dialogRef = this.dialog.open(DialogMessageComponent);\r\n       dialogRef.componentInstance.title = this.translate.instant(\"atention\")\r\n       dialogRef.componentInstance.message = this.translate.instant(\"requiredFieldMessage\")\r\n       dialogRef.componentInstance.hideCancelButton = true;\r\n       dialogRef.afterClosed().subscribe();\r\n    }\r\n\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { Component, EventEmitter, Injectable, Input, Output,ElementRef, ViewChild } from '@angular/core';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { BehaviorSubject, Observable, of as observableOf } from 'rxjs';\r\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { forEach } from 'jszip';\r\n\r\n/**\r\n * File node data with nested structure.\r\n * Each node has a name, and a type or a list of children.\r\n */\r\nexport class FileNode {\r\n  id: string;\r\n  children: FileNode[];\r\n  name: string;\r\n  type: any;\r\n  active: any\r\n  cartographyId: any\r\n  cartographyName: any\r\n  datasetURL: any\r\n  description: any\r\n  filterGetFeatureInfo: any\r\n  filterGetMap: any\r\n  filterSelectable: any\r\n  isFolder: any\r\n  metadataURL: any\r\n  order: any\r\n  parent: any\r\n  queryableActive: any\r\n  radio: any\r\n  tooltip: any\r\n  _links: any\r\n  status: any\r\n}\r\n\r\n/** Flat node with expandable and level information */\r\nexport class FileFlatNode {\r\n  constructor(\r\n    public expandable: boolean,\r\n    public name: string,\r\n    public level: number,\r\n    public type: any,\r\n    public id: string,\r\n    public status: string\r\n  ) { }\r\n}\r\n\r\n\r\n\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has name and type.\r\n * For a directory, it has name and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\n@Injectable()\r\nexport class FileDatabase {\r\n  dataChange = new BehaviorSubject<FileNode[]>([]);\r\n  get data(): any { return this.dataChange.value; }\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  initialize(dataObj, allNewElements) {\r\n\r\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\r\n    //     file node as children.\r\n    const data = this.buildFileTree(dataObj, 0, allNewElements);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /**\r\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n   * The return value is the list of `FileNode`.\r\n   */\r\n  buildFileTree(arrayTreeNodes: any[], level: number, allNewElements: any) {\r\n    var map = {};\r\n    if(arrayTreeNodes.length===0)\r\n    {\r\n      let root = {\r\n        isFolder:true,\r\n        name:'Root',\r\n        type: 'folder',\r\n        isRoot: true,\r\n        order: 0,\r\n        children: [],\r\n        id:0\r\n      }\r\n      map['root']=root;\r\n    }\r\n    else{\r\n      arrayTreeNodes.forEach((treeNode) => {\r\n        var obj = treeNode;\r\n        obj.children = [];\r\n        obj.type= (treeNode.isFolder)? \"folder\" : \"node\";\r\n        if(allNewElements) {\r\n          obj.status='pendingCreation';\r\n          if(obj.id) { obj.id = obj.id * -1 }\r\n          if(obj.parent) { obj.parent = obj.parent * -1 }\r\n        }\r\n  \r\n        if(!map[obj.id]) {map[obj.id] = obj;}\r\n        else{\r\n          let previousChildren= map[obj.id].children\r\n          map[obj.id] = obj;\r\n          map[obj.id].children=previousChildren\r\n        }\r\n        var parent = obj.parent || 'root';\r\n        if (!map[parent]) {\r\n          map[parent] = {\r\n            children: []\r\n          };\r\n        }\r\n        map[parent].children.push(obj);\r\n      });\r\n      map['root'].type='folder';\r\n      map['root'].name='Root';\r\n      map['root'].order=0;\r\n      map['root'].isFolder=true;\r\n      map['root'].isRoot=true;\r\n    }\r\n\r\n\r\n    return map['root'];\r\n  }\r\n  \r\n\r\n  deleteItem(node: FileNode, changedData:any) {\r\n    this.deleteNode(changedData.children, node);\r\n    this.dataChange.next(changedData);\r\n  }\r\n\r\n  deleteNode(nodes: FileNode[], nodeToDelete: FileNode) {\r\n    const index = nodes.indexOf(nodeToDelete, 0);\r\n    if (index > -1) {\r\n      nodes.splice(index, 1);\r\n    } else {\r\n      nodes.forEach(node => {\r\n        if (node.children && node.children.length > 0) {\r\n          this.deleteNode(node.children, nodeToDelete);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  setOrder(data: any[]){\r\n    for(let i=0; i< data.length; i++){\r\n      data[i].order=i;\r\n      if(! data[i].status) { data[i].status=\"Modified\"; } \r\n    }\r\n    return data;\r\n   }\r\n\r\n  copyPasteItem(from: FileNode, to: FileNode, changedData:any): FileNode {\r\n    const newItem = this.insertItem(to, from,changedData);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  copyPasteItemAbove(from: FileNode, to: FileNode,changedData:any): FileNode {\r\n    const newItem = this.insertItemAbove(to, from,changedData);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  copyPasteItemBelow(from: FileNode, to: FileNode,changedData:any): FileNode {\r\n    const newItem = this.insertItemBelow(to, from,changedData);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  /** Add an item to to-do list */\r\n  \r\n  getNewItem(node:FileNode){\r\n    const newItem = {\r\n      name: node.name,\r\n      children: node.children,\r\n      type: node.type,\r\n      id: node.id, \r\n      active: node.active,\r\n      cartographyId: node.cartographyId,\r\n      cartographyName: node.cartographyName,\r\n      datasetURL: node.datasetURL,\r\n      description: node.description,\r\n      filterGetFeatureInfo: node.filterGetFeatureInfo,\r\n      filterGetMap: node.filterGetMap,\r\n      filterSelectable: node.filterSelectable,\r\n      isFolder: node.isFolder,\r\n      metadataURL: node.metadataURL,\r\n      order: node.order,\r\n      queryableActive: node.queryableActive,\r\n      radio: node.radio,\r\n      tooltip: node.tooltip,\r\n      _links: node._links } as FileNode;\r\n\r\n    return newItem;\r\n  }\r\n\r\n  insertItem(parent: FileNode, node: FileNode,changedData:any): FileNode {\r\n    if (!parent.children) {\r\n      parent.children = [];\r\n    }\r\n    const newItem = this.getNewItem(node)\r\n    newItem.parent = parent==null || parent.id==undefined?null:parent.id;\r\n\r\n    parent.children.push(newItem);\r\n    this.setOrder(parent.children)\r\n    this.dataChange.next(changedData);\r\n    return newItem;\r\n  }\r\n\r\n  insertItemAbove(node: FileNode, nodeDrag: FileNode,changedData:any): FileNode {\r\n    const parentNode = this.getParentFromNodes(node,changedData);\r\n    const newItem = this.getNewItem(nodeDrag)\r\n    newItem.parent = parentNode==null || parentNode.id==undefined?null:parentNode.id;\r\n  \r\n    if (parentNode != null) {\r\n      parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\r\n      this.setOrder(parentNode.children)\r\n    } else {\r\n      changedData.children.splice(changedData.children.indexOf(node), 0, newItem);\r\n      this.setOrder(changedData.children)\r\n    }\r\n    this.dataChange.next(changedData);\r\n    return newItem;\r\n  }\r\n\r\n  insertItemBelow(node: FileNode, nodeDrag: FileNode,changedData:any): FileNode {\r\n    const parentNode = this.getParentFromNodes(node,changedData);\r\n   \r\n    const newItem = this.getNewItem(nodeDrag)\r\n    newItem.parent = parentNode==null || parentNode.id==undefined?null:parentNode.id;\r\n\r\n    if (parentNode != null) {\r\n      parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\r\n      this.setOrder(parentNode.children)\r\n    } else {\r\n      changedData.children.splice(changedData.children.indexOf(node) + 1, 0, newItem);\r\n      this.setOrder(changedData.children)\r\n    }\r\n    this.dataChange.next(changedData);\r\n    return newItem;\r\n  }\r\n\r\n  \r\n  getParentFromNodes(node: FileNode,changedData:any): FileNode {\r\n    for (let i = 0; i < changedData.children.length; ++i) {\r\n      const currentRoot =  changedData.children[i];\r\n      const parent = this.getParent(currentRoot, node);\r\n      if (parent != null) {\r\n        return parent;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  \r\n  getParent(currentRoot: FileNode, node: FileNode): FileNode {\r\n    if (currentRoot.children && currentRoot.children.length > 0) {\r\n      for (let i = 0; i < currentRoot.children.length; ++i) {\r\n        const child = currentRoot.children[i];\r\n        if (child === node) {\r\n          return currentRoot;\r\n        } else if (child.children && child.children.length > 0) {\r\n          const parent = this.getParent(child, node);\r\n          if (parent != null) {\r\n            return parent;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @title Tree with flat nodes\r\n */\r\n@Component({\r\n  selector: 'app-data-tree',\r\n  templateUrl: 'data-tree.component.html',\r\n  styleUrls: ['data-tree.component.scss'],\r\n  providers: [FileDatabase]\r\n})\r\nexport class DataTreeComponent {\r\n  @Output() createNode: EventEmitter<any>;\r\n  @Output() createFolder: EventEmitter<any>;\r\n  @Output() emitNode: EventEmitter<any>;\r\n  @Output() emitAllNodes: EventEmitter<any>;\r\n  @Input() eventNodeUpdatedSubscription: Observable <any> ;\r\n  @Input() eventCreateNodeSubscription: Observable <any> ;\r\n  @Input() eventGetAllRowsSubscription: Observable <any> ;\r\n  @Input() eventRefreshSubscription: Observable <any> ;\r\n  private _eventNodeUpdatedSubscription: any;\r\n  private _eventCreateNodeSubscription: any;\r\n  private _eventGetAllRowsSubscription: any;\r\n  private _eventRefreshSubscription: any;\r\n  treeControl: FlatTreeControl<FileFlatNode>;\r\n  treeFlattener: MatTreeFlattener<FileNode, FileFlatNode>;\r\n  dataSource: MatTreeFlatDataSource<FileNode, FileFlatNode>;\r\n  // expansion model tracks expansion state\r\n  expansionModel = new SelectionModel<string>(true);\r\n  dragging = false;\r\n  expandTimeout: any;\r\n  expandDelay = 1000;\r\n  validateDrop = false;\r\n  treeData: any;\r\n\r\n  @Input() getAll: () => Observable<any>;\r\n  @Input() allNewElements: any;\r\n\r\n\r\n  /* Drag and drop */\r\n  dragNode: any;\r\n  dragNodeExpandOverWaitTimeMs = 1500;\r\n  dragNodeExpandOverNode: any;\r\n  dragNodeExpandOverTime: number;\r\n  dragNodeExpandOverArea: string;\r\n  @ViewChild('emptyItem') emptyItem: ElementRef;\r\n\r\n    /** Map from flat node to nested node. This helps us finding the nested node to be modified */\r\n    flatNodeMap = new Map<FileFlatNode, FileNode>();\r\n\r\n    /** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\n    nestedNodeMap = new Map<FileNode, FileFlatNode>();\r\n\r\n\r\n  constructor(public database: FileDatabase) {\r\n    this.emitNode = new EventEmitter();\r\n    this.createNode = new EventEmitter();\r\n    this.createFolder = new EventEmitter();\r\n    this.emitAllNodes = new EventEmitter();\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this._getLevel,\r\n      this._isExpandable, this._getChildren);\r\n    this.treeControl = new FlatTreeControl<FileFlatNode>(this._getLevel, this._isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n \r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n    if(this.eventNodeUpdatedSubscription)\r\n    {\r\n      this.eventNodeUpdatedSubscription.subscribe(\r\n        (node) => {\r\n          this.updateNode(node);\r\n        }\r\n      )\r\n    }\r\n    if(this.eventCreateNodeSubscription)\r\n    {\r\n      this.eventCreateNodeSubscription.subscribe(\r\n        (node) => {\r\n          if(node.isFolder) this.createNewFolder(node);\r\n          else this.createNewNode(node);\r\n        }\r\n      )\r\n    }\r\n\r\n    if (this.eventGetAllRowsSubscription) {\r\n      this._eventGetAllRowsSubscription = this.eventGetAllRowsSubscription.subscribe(() => {\r\n        this.emitAllRows();\r\n      });\r\n    }\r\n\r\n    if (this.eventRefreshSubscription) {\r\n      this._eventRefreshSubscription = this.eventRefreshSubscription.subscribe(() => {\r\n        this.getElements();\r\n      });\r\n    }\r\n    \r\n    this.getElements();\r\n  }\r\n\r\n  getElements(): void {\r\n    this.getAll()\r\n    .subscribe((items) => {\r\n      this.treeData = items;\r\n      this.database.initialize(this.treeData, this.allNewElements);\r\n      this.database.dataChange.subscribe(data => this.rebuildTreeForData([data]));\r\n    });\r\n  }\r\n\r\n\r\n  transformer = (node: FileNode, level: number) => {\r\n    const existingNode = this.nestedNodeMap.get(node);\r\n    const flatNode = existingNode && existingNode.name === node.name\r\n      ? existingNode\r\n      : new FileFlatNode((node.children && node.children.length > 0),node.name,level,node.type,node.id,node.status);\r\n\r\n    this.flatNodeMap.set(flatNode, node);\r\n    this.nestedNodeMap.set(node, flatNode);\r\n    return flatNode;\r\n  \r\n  }\r\n  private _getLevel = (node: FileFlatNode) => node.level;\r\n  private _isExpandable = (node: FileFlatNode) => node.expandable;\r\n  private _getChildren = (node: FileNode): Observable<FileNode[]> => observableOf(node.children);\r\n  hasChild = (_: number, _nodeData: FileFlatNode) => _nodeData.expandable;\r\n\r\n\r\n  /**\r\n   * This constructs an array of nodes that matches the DOM\r\n   */\r\n  visibleNodes(): FileNode[] {\r\n    const result = [];\r\n\r\n    function addExpandedChildren(node: FileNode, expanded: string[]) {\r\n      result.push(node);\r\n      if (expanded.indexOf(node.id) != -1) {\r\n        node.children.map((child) => addExpandedChildren(child, expanded));\r\n      }\r\n    }\r\n    this.dataSource.data.forEach((node) => {\r\n      addExpandedChildren(node, this.expansionModel.selected);\r\n    });\r\n    return result;\r\n  }\r\n\r\n\r\n   findNodeSiblings(arr: Array<any>, id: string): Array<any> {\r\n    let result, subResult;\r\n    arr.forEach((item, i) => {\r\n      if (item.id === id) {\r\n        result = arr;\r\n      } else if (item.children) {\r\n        subResult = this.findNodeSiblings(item.children, id);\r\n        if (subResult) result = subResult;\r\n      }\r\n    });\r\n    return result;\r\n\r\n  }\r\n\r\n\r\n  handleDragStart(event, node) {\r\n    // Required by Firefox (https://stackoverflow.com/questions/19055264/why-doesnt-html5-drag-and-drop-work-in-firefox)\r\n    event.dataTransfer.setData('foo', 'bar');\r\n    event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\r\n    this.dragNode = node;\r\n    this.treeControl.collapse(node);\r\n  }\r\n\r\n  handleDragOver(event, node) {\r\n    event.preventDefault();\r\n\r\n    // Handle node expand\r\n    if (node === this.dragNodeExpandOverNode) {\r\n      if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\r\n        if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\r\n          this.treeControl.expand(node);\r\n        }\r\n      }\r\n    } else {\r\n      this.dragNodeExpandOverNode = node;\r\n      this.dragNodeExpandOverTime = new Date().getTime();\r\n    }\r\n\r\n    // Handle drag area\r\n    const percentageX = event.offsetX / event.target.clientWidth;\r\n    const percentageY = event.offsetY / event.target.clientHeight;\r\n    if (percentageY < 0.25) {\r\n      this.dragNodeExpandOverArea = 'above';\r\n    } else if (percentageY > 0.75) {\r\n      this.dragNodeExpandOverArea = 'below';\r\n    } else {\r\n      this.dragNodeExpandOverArea = 'center';\r\n    }\r\n  }\r\n\r\n  handleDrop(event, node) {\r\n    event.preventDefault();\r\n    const changedData = JSON.parse(JSON.stringify(this.dataSource.data))\r\n\r\n    \r\n    let toFlatNode;\r\n    if(node.id === undefined) { toFlatNode=changedData[0] }\r\n    else{\r\n      toFlatNode= this.findNodeSiblings(changedData[0].children, node.id).find(nodeAct => nodeAct.id === node.id);\r\n    }\r\n    let fromFlatNode;\r\n    if( this.dragNode.id === undefined) { fromFlatNode=changedData[0] }\r\n    else{\r\n      fromFlatNode = this.findNodeSiblings(changedData[0].children, this.dragNode.id).find(nodeAct => nodeAct.id === this.dragNode.id);\r\n    }\r\n    if (this.dragNode.status!=\"pendingDelete\" && node !== this.dragNode && (this.dragNodeExpandOverArea !== 'center' || (this.dragNodeExpandOverArea === 'center' && toFlatNode.isFolder))) {\r\n      let newItem: FileNode;\r\n\r\n      if (this.dragNodeExpandOverArea === 'above') {\r\n        newItem = this.database.copyPasteItemAbove(fromFlatNode,toFlatNode,changedData[0]);\r\n      } else if (this.dragNodeExpandOverArea === 'below') {\r\n        newItem = this.database.copyPasteItemBelow(fromFlatNode,toFlatNode,changedData[0]);\r\n      } else {\r\n        newItem = this.database.copyPasteItem(fromFlatNode, toFlatNode,changedData[0]);\r\n      }    \r\n      let parentLvl=this.treeControl.dataNodes.find((n) => n.id === fromFlatNode.id).level;\r\n      fromFlatNode.children.forEach(child=>{\r\n        this.treeControl.dataNodes.find((n) => n.id === child.id).level=parentLvl+1\r\n      });\r\n      this.database.deleteItem(fromFlatNode,changedData[0]);\r\n      this.treeControl.expandDescendants(this.nestedNodeMap.get(newItem));\r\n    }\r\n   \r\n    this.dragNode = null;\r\n    this.dragNodeExpandOverNode = null;\r\n    this.dragNodeExpandOverTime = 0;\r\n  }\r\n\r\n  handleDragEnd(event) {\r\n    this.dragNode = null;\r\n    this.dragNodeExpandOverNode = null;\r\n    this.dragNodeExpandOverTime = 0;\r\n  }\r\n\r\n  /**\r\n   * The following methods are for persisting the tree expand state\r\n   * after being rebuilt\r\n   */\r\n\r\n   sortByOrder(data: any[]){\r\n    // data.sort((a,b) => a.order.toString().localeCompare( b.order.toString()));\r\n    data.sort((a,b) => (a.order > b.order) ? 1 : ((b.order > a.order) ? -1 : 0));\r\n    data.forEach((item) => {\r\n      if (item.children.length>0) {\r\n        this.sortByOrder(item.children);\r\n      }\r\n\r\n    });\r\n   }\r\n\r\n   setOrder(data: any[]){\r\n    for(let i=0; i< data.length; i++){\r\n      data[i].order=i;\r\n      if(! data[i].status) { data[i].status=\"Modified\"; } \r\n    }\r\n    return data;\r\n   }\r\n\r\n  rebuildTreeForData(data: any[]) {\r\n    //this.dataSource.data = data;\r\n    this.sortByOrder(data);\r\n    this.dataSource.data = [];\r\n    this.dataSource.data = data;\r\n    this.treeControl.expansionModel.selected.forEach((nodeAct) => {\r\n      if(nodeAct){\r\n        const node = this.treeControl.dataNodes.find((n) => n.id === nodeAct.id);\r\n        this.treeControl.expand(node);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getParentNode(node: FileFlatNode): FileFlatNode | null {\r\n    const currentLevel = node.level;\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n      if (currentNode.level < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  updateNode(nodeUpdated)\r\n  {\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    const siblings = this.findNodeSiblings(dataToChange, nodeUpdated.id);\r\n    let index= siblings.findIndex(node => node.id === nodeUpdated.id)\r\n    siblings[index]=nodeUpdated;\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n  createNewFolder(newFolder)\r\n  {\r\n    newFolder.type=\"folder\";\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    if(newFolder.parent === null) {\r\n      newFolder.order=dataToChange[0].children.length;\r\n      dataToChange[0].children.push(newFolder)\r\n    }\r\n    else{\r\n      const siblings = this.findNodeSiblings(dataToChange, newFolder.parent);\r\n      let index= siblings.findIndex(node => node.id === newFolder.parent);\r\n      newFolder.order=siblings[index].children.length;\r\n      siblings[index].children.push(newFolder)\r\n    }\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n  createNewNode(newNode)\r\n  {\r\n    newNode.type=\"node\";\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    if(newNode.parent === null) {\r\n      newNode.order=dataToChange[0].children.length;\r\n      dataToChange[0].children.push(newNode)\r\n    }\r\n    else{\r\n    const siblings = this.findNodeSiblings(dataToChange, newNode.parent);\r\n    let index= siblings.findIndex(node => node.id === newNode.parent);\r\n    newNode.order=siblings[index].children.length;\r\n    siblings[index].children.push(newNode)\r\n    }\r\n\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n\r\n\r\n  onButtonClicked(id, button: string)\r\n  {\r\n    const changedData = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    const siblings = this.findNodeSiblings(changedData, id);\r\n    let nodeClicked= siblings.find(node => node.id === id);\r\n    if(button ==='edit')  {this.emitNode.emit(nodeClicked)}\r\n    else if(button === 'newFolder') {this.createFolder.emit(nodeClicked)}\r\n    else if(button === 'newNode') {this.createNode.emit( nodeClicked)}\r\n    else if(button === 'delete') {\r\n      // let children= this.getAllChildren(nodeClicked.children)\r\n      // children.forEach(children => {\r\n      //   children.status='pendingDelete';\r\n      // });\r\n      this.deleteChildren(nodeClicked.children);\r\n      // nodeClicked.children=children\r\n      nodeClicked.status='pendingDelete'\r\n      \r\n      this.rebuildTreeForData(changedData);\r\n    }\r\n\r\n  }\r\n\r\n  emitAllRows()\r\n  {\r\n    const dataToEmit = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    let allRows = this.getAllChildren(dataToEmit); \r\n    this.emitAllNodes.emit(allRows);\r\n  }\r\n\r\n  getAllChildren(arr)\r\n  {\r\n    let result = [];\r\n    let subResult;\r\n    arr.forEach((item, i) => {\r\n      if (item.children.length>0) {\r\n        subResult = this.getAllChildren(item.children);\r\n        if (subResult) result.push(...subResult);\r\n      }\r\n      result.push(item);\r\n\r\n    });\r\n    return result;\r\n  }\r\n\r\n  deleteChildren(arr)\r\n  {\r\n    arr.forEach((item, i) => {\r\n      if (item.children.length>0) {\r\n        this.deleteChildren(item.children);\r\n      }\r\n      item.status='pendingDelete'\r\n\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconRegistry } from \"@angular/material/icon\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-translation',\r\n  templateUrl: './dialog-translation.component.html',\r\n  styleUrls: ['./dialog-translation.component.scss']\r\n})\r\nexport class DialogTranslationComponent implements OnInit {\r\n\r\n  translationForm: FormGroup;\r\n  translationsMap:  Map<string, any>;\r\n  languageByDefault:  string;\r\n  languagesAvailables: Array<any>;\r\n  catalanAvailable = false;\r\n  catalanValue: string;\r\n  spanishAvailable = false;\r\n  spanishValue: string;\r\n  englishAvailable = false;\r\n  englishValue: string;\r\n  araneseAvailable = false;\r\n  araneseValue: string;\r\n  frenchAvailable = false;\r\n  frenchValue: string;\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogTranslationComponent>,\r\n    private matIconRegistry: MatIconRegistry,\r\n    private domSanitizer: DomSanitizer) { \r\n    this.initializeTranslationForm();\r\n    this.matIconRegistry.addSvgIcon(\r\n      `icon_lang_ca`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/img/flag_ca.svg')\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      `icon_lang_es`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/img/flag_es.svg')\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      `icon_lang_en`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/img/flag_en.svg')\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      `icon_lang_oc`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/img/flag_oc.svg')\r\n    );\r\n    this.matIconRegistry.addSvgIcon(\r\n      `icon_lang_fr`,\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/img/flag_fr.svg')\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.checkLanguagesAvailables();\r\n    this.checkTranslationsAlreadyDone();\r\n    // if(this.catalanValue != null){\r\n    //   this.translationForm.patchValue({\r\n    //     catalanValue: this.catalanValue\r\n    //   })\r\n    // }\r\n    // if(this.spanishValue != null){\r\n    //   this.translationForm.patchValue({\r\n    //     spanishValue: this.spanishValue\r\n    //   })\r\n    // }\r\n    // if(this.englishValue != null){\r\n    //   this.translationForm.patchValue({\r\n    //     englishValue: this.englishValue\r\n    //   })\r\n    // }\r\n    // if(this.araneseValue != null){\r\n    //   this.translationForm.patchValue({\r\n    //     araneseValue: this.araneseValue\r\n    //   })\r\n    // }\r\n    // if(this.frenchValue != null){\r\n    //   this.translationForm.patchValue({\r\n    //     frenchValue: this.frenchValue\r\n    //   })\r\n    // }\r\n  }\r\n\r\n  checkLanguagesAvailables(): void {\r\n    this.languagesAvailables.forEach(element => {\r\n      if(element.shortname == 'ca' && this.languageByDefault!= 'ca') {  this.catalanAvailable = true }\r\n      if(element.shortname == 'es' && this.languageByDefault!= 'es') {  this.spanishAvailable = true }\r\n      if(element.shortname == 'en' && this.languageByDefault!= 'en') {  this.englishAvailable = true }\r\n      if(element.shortname == 'oc-aranes' && this.languageByDefault!= 'oc-aranes') {  this.araneseAvailable = true }\r\n      if(element.shortname == 'fr' && this.languageByDefault!= 'fr') {  this.frenchAvailable = true }\r\n    });\r\n  }\r\n\r\n  checkTranslationsAlreadyDone(): void {\r\n    this.translationsMap.forEach((value: any, key: string) => {\r\n      if(key == 'ca' && value && value.translation) { this.translationForm.patchValue({ catalanValue: value.translation }) }\r\n      if(key == 'es' && value && value.translation) { this.translationForm.patchValue({ spanishValue: value.translation }) }\r\n      if(key == 'en' && value && value.translation) { this.translationForm.patchValue({ englishValue: value.translation }) }\r\n      if(key == 'oc-aranes' && value && value.translation) { this.translationForm.patchValue({ araneseValue: value.translation }) }\r\n      if(key == 'fr' && value && value.translation) { this.translationForm.patchValue({ frenchValue: value.translation }) }\r\n  });\r\n  }\r\n\r\n  initializeTranslationForm(): void {\r\n\r\n    this.translationForm = new FormGroup({\r\n      catalanValue: new FormControl(null, []),\r\n      spanishValue: new FormControl(null, []),\r\n      englishValue: new FormControl(null, []),\r\n      araneseValue: new FormControl(null, []),\r\n      frenchValue: new FormControl(null, []),\r\n    })\r\n  }\r\n\r\n  doAccept(){\r\n    if (this.translationsMap.has(\"ca\") && this.translationForm.value.catalanValue) { this.translationsMap.get('ca').translation = this.translationForm.value.catalanValue }\r\n    if (this.translationsMap.has(\"es\") && this.translationForm.value.spanishValue) { this.translationsMap.get('es').translation = this.translationForm.value.spanishValue }\r\n    if (this.translationsMap.has(\"en\") && this.translationForm.value.englishValue) { this.translationsMap.get('en').translation = this.translationForm.value.englishValue }\r\n    if (this.translationsMap.has(\"oc-aranes\") && this.translationForm.value.araneseValue) { this.translationsMap.get('oc-aranes').translation = this.translationForm.value.araneseValue }\r\n    if (this.translationsMap.has(\"fr\") && this.translationForm.value.frenchValue) { this.translationsMap.get('fr').translation = this.translationForm.value.frenchValue }\r\n    this.dialogRef.close({event:'Accept', data: this.translationsMap});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnChanges, ViewChild, ElementRef, Input, ViewEncapsulation } from '@angular/core';\r\nimport * as d3 from 'd3';\r\n\r\n\r\n@Component({\r\n  selector: 'app-datagraph',\r\n  templateUrl: './datagraph.component.html',\r\n  styleUrls: ['./datagraph.component.scss']\r\n})\r\nexport class DatagraphComponent implements OnInit {\r\n\r\n  @ViewChild('chart',{static: true}) private chartContainer: ElementRef;\r\n  @Input() private data: Array<any>;\r\n  @Input() private type;\r\n  private margin: any = { top: 20, bottom: 60, left: 40, right: 40};\r\n  private margin2 = 80;\r\n  private chart: any;\r\n  private width: number;\r\n  private height: number;\r\n  private xScale: any;\r\n  private yScale: any;\r\n  private colors: any;\r\n  private xAxis: any;\r\n  private yAxis: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n      if(this.type == \"bar\"){\r\n        this.createBarChart();\r\n        if (this.data) {\r\n          this.updateBarChart(); \r\n        }\r\n      }\r\n      \r\n  }\r\n  \r\n\r\n  ngOnChanges() {\r\n    if(this.type == \"bar\")\r\n    {\r\n      if (this.chart) {\r\n        this.updateBarChart();\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  createBarChart() {\r\n    let element = this.chartContainer.nativeElement;\r\n    this.width = element.offsetWidth - this.margin.left - this.margin.right;\r\n    this.height = element.offsetHeight - this.margin.top - this.margin.bottom;\r\n    let svg = d3.select(element).append('svg')\r\n      .attr('width', '100%')\r\n      .attr(\"height\", '100%')\r\n\r\n    // chart plot area\r\n    this.chart = svg.append('g')\r\n      .attr('class', 'bars')\r\n      .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\r\n      \r\n      const barGroups = this.chart.selectAll()\r\n      .data(this.data)\r\n      .enter()\r\n      .append('g')\r\n\r\n  \r\n\r\n    // define X & Y domains\r\n    let xDomain = this.data.map(d => d.index);\r\n    let yDomain = [0, (d3.max(this.data, d => d.value))];\r\n\r\n    // create scales\r\n    this.xScale = d3.scaleBand().padding(0.3).domain(xDomain).rangeRound([0, this.width]);\r\n    this.yScale = d3.scaleLinear().domain(yDomain).range([this.height, 0]);\r\n\r\n    // bar colors\r\n   // this.colors = d3.scaleLinear().domain([0, this.data.length]).range(<any[]>['red', 'blue']);\r\n    \r\n    barGroups \r\n      .append('text')\r\n      .attr('class', 'value')\r\n      .attr('x', (a) => this.xScale(a.index) + this.xScale.bandwidth() / 2)\r\n      .attr('y', (a) => this.yScale(a.value)-5)\r\n      .attr('text-anchor', 'middle')\r\n      .style(\"font-size\", 9)\r\n      .style(\"fill\", \"black\")\r\n      .text((a) => `${a.value}`)\r\n\r\n\r\n    // x & y axis\r\n    this.xAxis = svg.append('g')\r\n      .attr('class', 'axis axis-x')\r\n      .attr('transform', `translate(${this.margin.left}, ${this.margin.top + this.height})`)\r\n      .call(d3.axisBottom(this.xScale))\r\n      .selectAll(\"text\")\r\n      .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n      .style(\"text-anchor\", \"end\")\r\n      .style(\"font-size\", 9)\r\n      .style(\"fill\", \"black\")\r\n\r\n      \r\n    this.yAxis = svg.append('g')\r\n      .attr('class', 'axis axis-y')\r\n      .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\r\n      .call(d3.axisLeft(this.yScale))\r\n      .selectAll(\"text\")\r\n      .style(\"font-size\", 9)\r\n      .style(\"fill\", \"black\")\r\n\r\n      \r\n  }\r\n\r\n  updateBarChart() {\r\n    // update scales & axis\r\n    this.xScale.domain(this.data.map(d => d.index));\r\n    this.yScale.domain([0,(d3.max(this.data, d => d.value))]);\r\n    this.xAxis.transition().call(d3.axisBottom(this.xScale));\r\n    this.yAxis.transition().call(d3.axisLeft(this.yScale));\r\n\r\n    let update = this.chart.selectAll('.bar')\r\n      .data(this.data);\r\n\r\n    // remove exiting bars\r\n    update.exit().remove();\r\n\r\n    // update existing bars\r\n    this.chart.selectAll('.bar').transition()\r\n      .attr('x', d => this.xScale(d.index))\r\n      .attr('y', d => this.yScale(d.value))\r\n      .attr('width', d => this.xScale.bandwidth())\r\n      .attr('height', d => this.height - this.yScale(d[1]))\r\n      .style('fill', '#be7d27');\r\n\r\n    // add new bars\r\n    update\r\n      .enter()\r\n      .append('rect')\r\n      .attr('class', 'bar')\r\n      .attr('x', d => this.xScale(d.index))\r\n      .attr('y', d => this.yScale(d.value))\r\n      .attr('height', d => this.height - this.yScale(d.value))\r\n      .attr('width', this.xScale.bandwidth())\r\n      .style('fill', '#be7d27')\r\n      .transition()\r\n      .delay((d, i) => i * 10)\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n//import * as ol from 'openlayers';\r\nimport { TranslateModule, TranslateLoader, TranslateService } from '@ngx-translate/core';\r\nimport { registerLocaleData } from '@angular/common';\r\n//import { AngularHalModule } from 'dist/sitmun-frontend-core/';\r\n\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport localeCa from '@angular/common/locales/ca';\r\nimport localeEs from '@angular/common/locales/es';\r\n// import { SitmunFrontendCoreModule } from 'dist/sitmun-frontend-core/';\r\nimport { DataGridComponent } from './data-grid/data-grid.component';\r\n\r\nimport { AgGridModule } from '@ag-grid-community/angular';\r\n\r\nimport {MaterialModule} from './material-module';\r\n\r\nimport { BtnEditRenderedComponent } from './btn-edit-rendered/btn-edit-rendered.component';\r\nimport { BtnCheckboxRenderedComponent } from './btn-checkbox-rendered/btn-checkbox-rendered.component';\r\nimport { BtnCheckboxFilterComponent } from './btn-checkbox-filter/btn-checkbox-filter.component';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { DialogGridComponent } from './dialog-grid/dialog-grid.component';\r\nimport { DialogFormComponent } from './dialog-form/dialog-form.component';\r\nimport { DialogMessageComponent } from './dialog-message/dialog-message.component';\r\nimport { DataTreeComponent } from './data-tree/data-tree.component';\r\nimport { DialogTranslationComponent } from './dialog-translation/dialog-translation.component';\r\nimport { DatagraphComponent } from './data-graph/datagraph.component';\r\n\r\n\r\nregisterLocaleData(localeCa, 'ca');\r\nregisterLocaleData(localeEs, 'es');\r\n\r\n/** Load translation assets */\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, '../assets/i18n/', '.json');\r\n}\r\n\r\n\r\n/** SITMUN plugin core module */\r\n@NgModule({\r\n  imports: [\r\n    RouterModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    //AngularHalModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    AgGridModule,\r\n    // SitmunFrontendCoreModule,\r\n    MaterialModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: (createTranslateLoader),\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n\r\n  ],\r\n  declarations: [\r\n    DataGridComponent,\r\n    DataTreeComponent,\r\n    BtnEditRenderedComponent,\r\n    BtnCheckboxRenderedComponent,\r\n    BtnCheckboxFilterComponent,\r\n    DialogGridComponent,\r\n    DialogFormComponent,\r\n    DialogMessageComponent,\r\n    DialogTranslationComponent,\r\n    DatagraphComponent\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [\r\n  ],\r\n  exports: [\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    //AngularHalModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    DataGridComponent,\r\n    DataTreeComponent,\r\n    DialogGridComponent,\r\n    DialogFormComponent,\r\n    DialogMessageComponent,\r\n    DialogTranslationComponent,\r\n    DatagraphComponent,\r\n    // SitmunFrontendCoreModule\r\n  ]\r\n})\r\nexport class SitmunFrontendGuiModule {\r\n}\r\n"],"mappings":"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","ignoreList":[]}